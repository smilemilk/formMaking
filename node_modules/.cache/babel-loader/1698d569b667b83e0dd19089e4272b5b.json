{"remainingRequest":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/GenerateFormItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/GenerateFormItem.vue","mtime":1557561290000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/package.json","mtime":1557727773054},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FmUpload from \"./Upload\";\nimport FmEditor from \"./Editor/tinymce\";\nexport default {\n  props: ['widget', 'models', 'rules', 'remote'],\n  components: {\n    FmUpload: FmUpload,\n    FmEditor: FmEditor\n  },\n  data: function data() {\n    return {\n      dataModel: this.models[this.widget.model]\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    if (this.widget.options.remote && this.remote[this.widget.options.remoteFunc]) {\n      this.remote[this.widget.options.remoteFunc](function (data) {\n        _this.widget.options.remoteOptions = data.map(function (item) {\n          return {\n            value: item[_this.widget.options.props.value],\n            label: item[_this.widget.options.props.label],\n            children: item[_this.widget.options.props.children]\n          };\n        });\n      });\n    }\n\n    if (this.widget.type === 'imgupload' && this.widget.options.isQiniu) {\n      this.remote[this.widget.options.tokenFunc](function (data) {\n        _this.widget.options.token = data;\n      });\n    }\n  },\n  methods: {},\n  watch: {\n    dataModel: {\n      deep: true,\n      handler: function handler(val) {\n        this.models[this.widget.model] = val;\n        this.$emit('update:models', _objectSpread({}, this.models, _defineProperty({}, this.widget.model, val)));\n      }\n    },\n    models: {\n      deep: true,\n      handler: function handler(val) {\n        this.dataModel = val[this.widget.model];\n      }\n    }\n  }\n};",{"version":3,"sources":["GenerateFormItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA,OAAA,QAAA;AACA,OAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,QAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,OAXA,qBAWA;AAAA;;AACA,QAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,IAAA,KAAA,MAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,WAAA,MAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA;AACA,YAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CADA;AAEA,YAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAFA;AAGA,YAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,QAAA;AAHA,WAAA;AAKA,SANA,CAAA;AAOA,OARA;AASA;;AAEA,QAAA,KAAA,MAAA,CAAA,IAAA,KAAA,WAAA,IAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA;AACA,WAAA,MAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,OAFA;AAGA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA,EA9BA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,aAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,IAAA,GAAA;AACA,aAAA,KAAA,CAAA,eAAA,oBACA,KAAA,MADA,sBAEA,KAAA,MAAA,CAAA,KAFA,EAEA,GAFA;AAIA;AARA,KADA;AAWA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,aAAA,SAAA,GAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AACA;AAJA;AAXA;AAhCA,CAAA","sourcesContent":["<template>\n  <el-form-item :label=\"widget.name\" :prop=\"widget.model\">\n    <template v-if=\"widget.type == 'input'\" >\n      <el-input \n        v-if=\"widget.options.dataType == 'number' || widget.options.dataType == 'integer' || widget.options.dataType == 'float'\"\n        :type=\"widget.options.dataType\"\n        v-model.number=\"dataModel\"\n        :placeholder=\"widget.options.placeholder\"\n        :style=\"{width: widget.options.width}\"\n      ></el-input>\n      <el-input \n        v-else\n        :type=\"widget.options.dataType\"\n        v-model=\"dataModel\"\n        :placeholder=\"widget.options.placeholder\"\n        :style=\"{width: widget.options.width}\"\n      ></el-input>\n    </template>\n\n    <template v-if=\"widget.type == 'textarea'\">\n      <el-input type=\"textarea\" :rows=\"5\"\n        v-model=\"dataModel\"\n        :disabled=\"widget.options.disabled\"\n        :placeholder=\"widget.options.placeholder\"\n        :style=\"{width: widget.options.width}\"\n      ></el-input>\n    </template>\n\n    <template v-if=\"widget.type == 'number'\">\n      <el-input-number \n        v-model=\"dataModel\" \n        :style=\"{width: widget.options.width}\"\n        :step=\"widget.options.step\"\n        controls-position=\"right\"\n      ></el-input-number>\n    </template>\n\n    <template v-if=\"widget.type == 'radio'\">\n      <el-radio-group v-model=\"dataModel\"\n        :style=\"{width: widget.options.width}\"\n      >\n        <el-radio\n          :style=\"{display: widget.options.inline ? 'inline-block' : 'block'}\"\n          :label=\"item.value\" v-for=\"(item, index) in (widget.options.remote ? widget.options.remoteOptions : widget.options.options)\" :key=\"index\"\n        >\n          <template v-if=\"widget.options.remote\">{{item.label}}</template>\n          <template v-else>{{widget.options.showLabel ? item.label : item.value}}</template>\n        </el-radio>\n      </el-radio-group>\n    </template>\n\n    <template v-if=\"widget.type == 'checkbox'\">\n      <el-checkbox-group v-model=\"dataModel\"\n        :style=\"{width: widget.options.width}\"\n      >\n        <el-checkbox\n          \n          :style=\"{display: widget.options.inline ? 'inline-block' : 'block'}\"\n          :label=\"item.value\" v-for=\"(item, index) in (widget.options.remote ? widget.options.remoteOptions : widget.options.options)\" :key=\"index\"\n        >\n          <template v-if=\"widget.options.remote\">{{item.label}}</template>\n          <template v-else>{{widget.options.showLabel ? item.label : item.value}}</template>\n        </el-checkbox>\n      </el-checkbox-group>\n    </template>\n\n    <template v-if=\"widget.type == 'time'\">\n      <el-time-picker \n        v-model=\"dataModel\"\n        :is-range=\"widget.options.isRange\"\n        :placeholder=\"widget.options.placeholder\"\n        :start-placeholder=\"widget.options.startPlaceholder\"\n        :end-placeholder=\"widget.options.endPlaceholder\"\n        :readonly=\"widget.options.readonly\"\n        :disabled=\"widget.options.disabled\"\n        :editable=\"widget.options.editable\"\n        :clearable=\"widget.options.clearable\"\n        :arrowControl=\"widget.options.arrowControl\"\n        :value-format=\"widget.options.format\"\n        :style=\"{width: widget.options.width}\"\n      >\n      </el-time-picker>\n    </template>\n\n    <template v-if=\"widget.type=='date'\">\n      <el-date-picker\n        v-model=\"dataModel\"\n        :type=\"widget.options.type\"\n        :placeholder=\"widget.options.placeholder\"\n        :start-placeholder=\"widget.options.startPlaceholder\"\n        :end-placeholder=\"widget.options.endPlaceholder\"\n        :readonly=\"widget.options.readonly\"\n        :disabled=\"widget.options.disabled\"\n        :editable=\"widget.options.editable\"\n        :clearable=\"widget.options.clearable\"\n        :value-format=\"widget.options.timestamp ? 'timestamp' : widget.options.format\"\n        :format=\"widget.options.format\"\n        :style=\"{width: widget.options.width}\"\n      >\n      </el-date-picker>\n    </template>\n\n    <template v-if=\"widget.type =='rate'\">\n      <el-rate v-model=\"dataModel\"\n        :max=\"widget.options.max\"\n        :disabled=\"widget.options.disabled\"\n        :allow-half=\"widget.options.allowHalf\"\n      ></el-rate>\n    </template>\n\n    <template v-if=\"widget.type == 'color'\">\n      <el-color-picker \n        v-model=\"dataModel\"\n        :disabled=\"widget.options.disabled\"\n        :show-alpha=\"widget.options.showAlpha\"\n      ></el-color-picker>\n    </template>\n\n    <template v-if=\"widget.type == 'select'\">\n      <el-select\n        v-model=\"dataModel\"\n        :disabled=\"widget.options.disabled\"\n        :multiple=\"widget.options.multiple\"\n        :clearable=\"widget.options.clearable\"\n        :placeholder=\"widget.options.placeholder\"\n        :style=\"{width: widget.options.width}\"\n        :filterable=\"widget.options.filterable\"\n      >\n        <el-option v-for=\"item in (widget.options.remote ? widget.options.remoteOptions : widget.options.options)\" :key=\"item.value\" :value=\"item.value\" :label=\"widget.options.showLabel || widget.options.remote?item.label:item.value\"></el-option>\n      </el-select>\n    </template>\n\n    <template v-if=\"widget.type=='switch'\">\n      <el-switch\n        v-model=\"dataModel\"\n        :disabled=\"widget.options.disabled\"\n      >\n      </el-switch>\n    </template>\n\n    <template v-if=\"widget.type=='slider'\">\n      <el-slider \n        v-model=\"dataModel\"\n        :min=\"widget.options.min\"\n        :max=\"widget.options.max\"\n        :disabled=\"widget.options.disabled\"\n        :step=\"widget.options.step\"\n        :show-input=\"widget.options.showInput\"\n        :range=\"widget.options.range\"\n        :style=\"{width: widget.options.width}\"\n      ></el-slider>\n    </template>\n\n    <template v-if=\"widget.type=='imgupload'\">\n      <fm-upload\n        v-model=\"dataModel\"\n        :disabled=\"widget.options.disabled\"\n        :style=\"{'width': widget.options.width}\"\n        :width=\"widget.options.size.width\"\n        :height=\"widget.options.size.height\"\n        :token=\"widget.options.token\"\n        :domain=\"widget.options.domain\"\n        :multiple=\"widget.options.multiple\"\n        :length=\"widget.options.length\"\n        :is-qiniu=\"widget.options.isQiniu\"\n        :is-delete=\"widget.options.isDelete\"\n        :min=\"widget.options.min\"\n        :is-edit=\"widget.options.isEdit\"\n        :action=\"widget.options.action\"\n      >\n      </fm-upload>\n    </template>\n\n    <template v-if=\"widget.type == 'editor'\">\n      <fm-editor\n        v-model=\"dataModel\"\n        :width=\"widget.options.width\"\n        :height=\"widget.options.height\"\n      >\n\n      </fm-editor>\n    </template>\n\n    <template v-if=\"widget.type == 'cascader'\">\n      <el-cascader\n        v-model=\"dataModel\"\n        :disabled=\"widget.options.disabled\"\n        :clearable=\"widget.options.clearable\"\n        :placeholder=\"widget.options.placeholder\"\n        :style=\"{width: widget.options.width}\"\n        :options=\"widget.options.remoteOptions\"\n      >\n\n      </el-cascader>\n    </template>\n  </el-form-item>\n</template>\n\n<script>\nimport FmUpload from './Upload'\nimport FmEditor from './Editor/tinymce'\n\nexport default {\n  props: ['widget', 'models', 'rules', 'remote'],\n  components: {\n    FmUpload,\n    FmEditor\n  },\n  data () {\n    return {\n      dataModel: this.models[this.widget.model]\n    }\n  },\n  created () {\n    if (this.widget.options.remote && this.remote[this.widget.options.remoteFunc]) {\n      this.remote[this.widget.options.remoteFunc]((data) => {\n        this.widget.options.remoteOptions = data.map(item => {\n          return {\n            value: item[this.widget.options.props.value],\n            label: item[this.widget.options.props.label],\n            children: item[this.widget.options.props.children]\n          }\n        })\n      })\n    }\n\n    if (this.widget.type === 'imgupload' && this.widget.options.isQiniu) {\n      this.remote[this.widget.options.tokenFunc]((data) => {\n        this.widget.options.token = data\n      })\n    }\n  },\n  methods: {\n  },\n  watch: {\n    dataModel: {\n      deep: true,\n      handler (val) {\n        this.models[this.widget.model] = val\n        this.$emit('update:models', {\n          ...this.models,\n          [this.widget.model]: val\n        })\n      }\n    },\n    models: {\n      deep: true,\n      handler (val) {\n        this.dataModel = val[this.widget.model]\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}