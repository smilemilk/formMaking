{"remainingRequest":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetForm.vue","mtime":1557765656499},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/package.json","mtime":1557727773054},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Draggable from 'vuedraggable';\nimport WidgetFormItem from \"./WidgetFormItem\";\nexport default {\n  components: {\n    Draggable: Draggable,\n    WidgetFormItem: WidgetFormItem\n  },\n  props: ['data', 'select'],\n  data: function data() {\n    return {\n      selectWidget: this.select\n    };\n  },\n  created: function created() {\n    console.log(this.data);\n  },\n  mounted: function mounted() {\n    document.body.ondrop = function (event) {\n      var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\n      if (isFirefox) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n  },\n  methods: {\n    handleMoveEnd: function handleMoveEnd(_ref) {\n      var newIndex = _ref.newIndex,\n          oldIndex = _ref.oldIndex;\n      console.log('index', newIndex, oldIndex);\n    },\n    handleSelectWidget: function handleSelectWidget(index) {\n      console.log(index, '#####');\n      this.selectWidget = this.data.list[index];\n    },\n    handleWidgetAdd: function handleWidgetAdd(evt) {\n      console.log('add', evt);\n      console.log('end', evt);\n      var newIndex = evt.newIndex;\n      var to = evt.to;\n      console.log(to); //为拖拽到容器的元素添加唯一 key\n\n      var key = Date.parse(new Date()) + '_' + Math.ceil(Math.random() * 99999);\n      this.$set(this.data.list, newIndex, _objectSpread({}, this.data.list[newIndex], {\n        options: _objectSpread({}, this.data.list[newIndex].options, {\n          remoteFunc: 'func_' + key\n        }),\n        key: key,\n        // 绑定键值\n        model: this.data.list[newIndex].type + '_' + key,\n        rules: []\n      }));\n\n      if (this.data.list[newIndex].type === 'radio' || this.data.list[newIndex].type === 'checkbox' || this.data.list[newIndex].type === 'select') {\n        this.$set(this.data.list, newIndex, _objectSpread({}, this.data.list[newIndex], {\n          options: _objectSpread({}, this.data.list[newIndex].options, {\n            options: this.data.list[newIndex].options.options.map(function (item) {\n              return _objectSpread({}, item);\n            })\n          })\n        }));\n      }\n\n      if (this.data.list[newIndex].type === 'grid') {\n        this.$set(this.data.list, newIndex, _objectSpread({}, this.data.list[newIndex], {\n          columns: this.data.list[newIndex].columns.map(function (item) {\n            return _objectSpread({}, item);\n          })\n        }));\n      }\n\n      this.selectWidget = this.data.list[newIndex];\n    },\n    handleWidgetColAdd: function handleWidgetColAdd($event, row, colIndex) {\n      console.log('coladd', $event, row, colIndex);\n      var newIndex = $event.newIndex;\n      var oldIndex = $event.oldIndex;\n      var item = $event.item; // 防止布局元素的嵌套拖拽\n\n      if (item.className.indexOf('data-grid') >= 0) {\n        // 如果是列表中拖拽的元素需要还原到原来位置\n        item.tagName === 'DIV' && this.data.list.splice(oldIndex, 0, row.columns[colIndex].list[newIndex]);\n        row.columns[colIndex].list.splice(newIndex, 1);\n        return false;\n      }\n\n      console.log('from', item);\n      var key = Date.parse(new Date()) + '_' + Math.ceil(Math.random() * 99999);\n      this.$set(row.columns[colIndex].list, newIndex, _objectSpread({}, row.columns[colIndex].list[newIndex], {\n        options: _objectSpread({}, row.columns[colIndex].list[newIndex].options, {\n          remoteFunc: 'func_' + key\n        }),\n        key: key,\n        // 绑定键值\n        model: row.columns[colIndex].list[newIndex].type + '_' + key,\n        rules: []\n      }));\n\n      if (row.columns[colIndex].list[newIndex].type === 'radio' || row.columns[colIndex].list[newIndex].type === 'checkbox' || this.data.list[newIndex].type === 'select') {\n        this.$set(row.columns[colIndex].list, newIndex, _objectSpread({}, row.columns[colIndex].list[newIndex], {\n          options: _objectSpread({}, row.columns[colIndex].list[newIndex].options, {\n            options: row.columns[colIndex].list[newIndex].options.options.map(function (item) {\n              return _objectSpread({}, item);\n            })\n          })\n        }));\n      }\n\n      this.selectWidget = row.columns[colIndex].list[newIndex];\n    },\n    handleWidgetDelete: function handleWidgetDelete(index) {\n      var _this = this;\n\n      if (this.data.list.length - 1 === index) {\n        if (index === 0) {\n          this.selectWidget = {};\n        } else {\n          this.selectWidget = this.data.list[index - 1];\n        }\n      } else {\n        this.selectWidget = this.data.list[index + 1];\n      }\n\n      this.$nextTick(function () {\n        _this.data.list.splice(index, 1);\n      });\n    }\n  },\n  watch: {\n    select: function select(val) {\n      this.selectWidget = val;\n    },\n    selectWidget: {\n      handler: function handler(val) {\n        this.$emit('update:select', val);\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["WidgetForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"widget-form-container\">\n    <el-form :size=\"data.config.size\" :label-position=\"data.config.labelPosition\" :label-width=\"data.config.labelWidth + 'px'\">\n\n      <draggable class=\"widget-form-list\"\n        v-model=\"data.list\"\n        v-bind=\"{group:'people', ghostClass: 'ghost'}\"\n        @end=\"handleMoveEnd\"\n        @add=\"handleWidgetAdd\"\n      >\n\n        <template v-for=\"(element, index) in data.list\">\n          {{data.list}}\n\n          <template v-if=\"element.type == 'grid'\">\n            <div v-if=\"element && element.key\"  class=\"widget-grid-container data-grid\" :key=\"element.key\" style=\"position: relative;\">\n              <el-row class=\"widget-grid \"\n                type=\"flex\"\n                :class=\"{active: selectWidget.key == element.key}\"\n                :gutter=\"element.options.gutter ? element.options.gutter : 0\"\n                :justify=\"element.options.justify\"\n                :align=\"element.options.align\"\n                @click.native=\"handleSelectWidget(index)\">\n                <el-col  v-for=\"(col, colIndex) in element.columns\" :key=\"colIndex\" :span=\"col.span ? col.span : 0\">\n                  <div style=\"border: 1px dashed #999;\">\n                    <draggable\n                      class=\"widget-form-list\"\n                      style=\"padding-bottom: 50px;\"\n                      v-model=\"col.list\"\n                      filter=\"widget-grid-container\"\n                      v-bind=\"{group:'people', ghostClass: 'ghost'}\"\n                      @end=\"handleMoveEnd\"\n                      @add=\"handleWidgetColAdd($event, element, colIndex)\"\n                    >\n                      <widget-form-item\n                        v-for=\"(el, i) in col.list\"\n                        :key=\"el.key\"\n                        v-if=\"el.key\"\n                        :element=\"el\"\n                        :select.sync=\"selectWidget\"\n                        :index=\"i\"\n                        :data=\"col\"></widget-form-item>\n                    </draggable>\n                  </div>\n                </el-col>\n\n              </el-row>\n              <el-button title=\"删除\" style=\"bottom: -20px;\" @click.stop=\"handleWidgetDelete(index)\" class=\"widget-action-delete\" v-if=\"selectWidget.key == element.key\" circle plain type=\"danger\">\n                <!-- <icon name=\"icon-trash\" style=\"width: 12px;height: 12px;\"></icon> -->\n                <i class=\"iconfont icon-trash\" ></i>\n              </el-button>\n            </div>\n          </template>\n          <template v-else>\n            <widget-form-item v-if=\"element && element.key\"  :key=\"element.key\" :element=\"element\" :select.sync=\"selectWidget\" :index=\"index\" :data=\"data\"></widget-form-item>\n          </template>\n        </template>\n\n      </draggable>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport Draggable from 'vuedraggable'\nimport WidgetFormItem from './WidgetFormItem'\n\nexport default {\n  components: {\n    Draggable,\n    WidgetFormItem\n  },\n  props: ['data', 'select'],\n  data () {\n    return {\n      selectWidget: this.select\n    }\n  },\n    created(){\n        console.log(this.data)\n    },\n  mounted () {\n    document.body.ondrop = function (event) {\n      let isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n      if (isFirefox) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n    }\n  },\n  methods: {\n    handleMoveEnd ({newIndex, oldIndex}) {\n      console.log('index', newIndex, oldIndex)\n    },\n    handleSelectWidget (index) {\n      console.log(index, '#####')\n      this.selectWidget = this.data.list[index]\n    },\n    handleWidgetAdd (evt) {\n      console.log('add', evt)\n      console.log('end', evt)\n      const newIndex = evt.newIndex\n      const to = evt.to\n      console.log(to)\n\n      //为拖拽到容器的元素添加唯一 key\n      const key = Date.parse(new Date()) + '_' + Math.ceil(Math.random() * 99999)\n      this.$set(this.data.list, newIndex, {\n        ...this.data.list[newIndex],\n        options: {\n          ...this.data.list[newIndex].options,\n          remoteFunc: 'func_' + key\n        },\n        key,\n        // 绑定键值\n        model: this.data.list[newIndex].type + '_' + key,\n        rules: []\n      })\n\n      if (this.data.list[newIndex].type === 'radio' || this.data.list[newIndex].type === 'checkbox' || this.data.list[newIndex].type === 'select') {\n        this.$set(this.data.list, newIndex, {\n          ...this.data.list[newIndex],\n          options: {\n            ...this.data.list[newIndex].options,\n            options: this.data.list[newIndex].options.options.map(item => ({\n              ...item\n            }))\n          }\n        })\n      }\n\n      if (this.data.list[newIndex].type === 'grid') {\n        this.$set(this.data.list, newIndex, {\n          ...this.data.list[newIndex],\n          columns: this.data.list[newIndex].columns.map(item => ({...item}))\n        })\n      }\n\n      this.selectWidget = this.data.list[newIndex]\n    },\n    handleWidgetColAdd ($event, row, colIndex) {\n      console.log('coladd', $event, row, colIndex)\n      const newIndex = $event.newIndex\n      const oldIndex = $event.oldIndex\n      const item = $event.item\n\n      // 防止布局元素的嵌套拖拽\n      if (item.className.indexOf('data-grid') >= 0) {\n\n        // 如果是列表中拖拽的元素需要还原到原来位置\n        item.tagName === 'DIV' && this.data.list.splice(oldIndex, 0, row.columns[colIndex].list[newIndex])\n\n        row.columns[colIndex].list.splice(newIndex, 1)\n\n        return false\n      }\n\n      console.log('from', item)\n\n      const key = Date.parse(new Date()) + '_' + Math.ceil(Math.random() * 99999)\n\n      this.$set(row.columns[colIndex].list, newIndex, {\n        ...row.columns[colIndex].list[newIndex],\n        options: {\n          ...row.columns[colIndex].list[newIndex].options,\n          remoteFunc: 'func_' + key\n        },\n        key,\n        // 绑定键值\n        model: row.columns[colIndex].list[newIndex].type + '_' + key,\n        rules: []\n      })\n\n      if (row.columns[colIndex].list[newIndex].type === 'radio' || row.columns[colIndex].list[newIndex].type === 'checkbox' || this.data.list[newIndex].type === 'select') {\n        this.$set(row.columns[colIndex].list, newIndex, {\n          ...row.columns[colIndex].list[newIndex],\n          options: {\n            ...row.columns[colIndex].list[newIndex].options,\n            options: row.columns[colIndex].list[newIndex].options.options.map(item => ({\n              ...item\n            }))\n          }\n        })\n      }\n\n      this.selectWidget = row.columns[colIndex].list[newIndex]\n    },\n    handleWidgetDelete (index) {\n      if (this.data.list.length - 1 === index) {\n        if (index === 0) {\n          this.selectWidget = {}\n        } else {\n          this.selectWidget = this.data.list[index - 1]\n        }\n      } else {\n        this.selectWidget = this.data.list[index + 1]\n      }\n\n      this.$nextTick(() => {\n        this.data.list.splice(index, 1)\n      })\n    },\n  },\n  watch: {\n    select (val) {\n      this.selectWidget = val\n    },\n    selectWidget: {\n      handler (val) {\n        this.$emit('update:select', val)\n      },\n      deep: true\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}