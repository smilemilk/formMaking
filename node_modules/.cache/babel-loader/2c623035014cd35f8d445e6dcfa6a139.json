{"remainingRequest":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/eslint-loader/index.js??ref--13-0!/Users/shanliguo/Documents/workstudy/vue-form-making/src/lib/tinymce/plugins/searchreplace/plugin.js","dependencies":[{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/src/lib/tinymce/plugins/searchreplace/plugin.js","mtime":1551936177000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var searchreplace = function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n\n      var get = function () {\n        return value;\n      };\n\n      var set = function (v) {\n        value = v;\n      };\n\n      var clone = function () {\n        return Cell(get());\n      };\n\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    function isContentEditableFalse(node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    }\n\n    function findAndReplaceDOMText(regex, node, replacementNode, captureGroup, schema) {\n      var m;\n      var matches = [];\n      var text,\n          count = 0,\n          doc;\n      var blockElementsMap, hiddenTextElementsMap, shortEndedElementsMap;\n      doc = node.ownerDocument;\n      blockElementsMap = schema.getBlockElements();\n      hiddenTextElementsMap = schema.getWhiteSpaceElements();\n      shortEndedElementsMap = schema.getShortEndedElements();\n\n      function getMatchIndexes(m, captureGroup) {\n        captureGroup = captureGroup || 0;\n\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n\n        var index = m.index;\n\n        if (captureGroup > 0) {\n          var cg = m[captureGroup];\n\n          if (!cg) {\n            throw new Error('Invalid capture group');\n          }\n\n          index += m[0].indexOf(cg);\n          m[0] = cg;\n        }\n\n        return [index, index + m[0].length, [m[0]]];\n      }\n\n      function getText(node) {\n        var txt;\n\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n\n        txt = '';\n\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n\n        return txt;\n      }\n\n      function stepThroughMatches(node, matches, replaceFn) {\n        var startNode,\n            endNode,\n            startNodeIndex,\n            endNodeIndex,\n            innerNodes = [],\n            atIndex = 0,\n            curNode = node,\n            matchLocation = matches.shift(),\n            matchIndex = 0;\n\n        out: while (true) {\n          if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n            atIndex++;\n          }\n\n          if (curNode.nodeType === 3) {\n            if (!endNode && curNode.length + atIndex >= matchLocation[1]) {\n              endNode = curNode;\n              endNodeIndex = matchLocation[1] - atIndex;\n            } else if (startNode) {\n              innerNodes.push(curNode);\n            }\n\n            if (!startNode && curNode.length + atIndex > matchLocation[0]) {\n              startNode = curNode;\n              startNodeIndex = matchLocation[0] - atIndex;\n            }\n\n            atIndex += curNode.length;\n          }\n\n          if (startNode && endNode) {\n            curNode = replaceFn({\n              startNode: startNode,\n              startNodeIndex: startNodeIndex,\n              endNode: endNode,\n              endNodeIndex: endNodeIndex,\n              innerNodes: innerNodes,\n              match: matchLocation[2],\n              matchIndex: matchIndex\n            });\n            atIndex -= endNode.length - endNodeIndex;\n            startNode = null;\n            endNode = null;\n            innerNodes = [];\n            matchLocation = matches.shift();\n            matchIndex++;\n\n            if (!matchLocation) {\n              break;\n            }\n          } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n            if (!isContentEditableFalse(curNode)) {\n              curNode = curNode.firstChild;\n              continue;\n            }\n          } else if (curNode.nextSibling) {\n            curNode = curNode.nextSibling;\n            continue;\n          }\n\n          while (true) {\n            if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              break;\n            } else if (curNode.parentNode !== node) {\n              curNode = curNode.parentNode;\n            } else {\n              break out;\n            }\n          }\n        }\n      }\n\n      function genReplacer(nodeName) {\n        var makeReplacementNode;\n\n        if (typeof nodeName !== 'function') {\n          var stencilNode_1 = nodeName.nodeType ? nodeName : doc.createElement(nodeName);\n\n          makeReplacementNode = function (fill, matchIndex) {\n            var clone = stencilNode_1.cloneNode(false);\n            clone.setAttribute('data-mce-index', matchIndex);\n\n            if (fill) {\n              clone.appendChild(doc.createTextNode(fill));\n            }\n\n            return clone;\n          };\n        } else {\n          makeReplacementNode = nodeName;\n        }\n\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n\n            var el = makeReplacementNode(range.match[0], matchIndex);\n            parentNode.insertBefore(el, node_1);\n\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          var innerEls = [];\n\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n            innerEls.push(innerEl);\n          }\n\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      }\n\n      text = getText(node);\n\n      if (!text) {\n        return;\n      }\n\n      if (regex.global) {\n        while (m = regex.exec(text)) {\n          matches.push(getMatchIndexes(m, captureGroup));\n        }\n      } else {\n        m = text.match(regex);\n        matches.push(getMatchIndexes(m, captureGroup));\n      }\n\n      if (matches.length) {\n        count = matches.length;\n        stepThroughMatches(node, matches, genReplacer(replacementNode));\n      }\n\n      return count;\n    }\n\n    var $_gbwwp0k1jnlpb2kj = {\n      findAndReplaceDOMText: findAndReplaceDOMText\n    };\n\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n\n      return value;\n    };\n\n    var markAllMatches = function (editor, currentIndexState, regex) {\n      var node, marker;\n      marker = editor.dom.create('span', {\n        'data-mce-bogus': 1\n      });\n      marker.className = 'mce-match-marker';\n      node = editor.getBody();\n      done(editor, currentIndexState, false);\n      return $_gbwwp0k1jnlpb2kj.findAndReplaceDOMText(regex, node, marker, false, editor.schema);\n    };\n\n    var unwrap = function (node) {\n      var parentNode = node.parentNode;\n\n      if (node.firstChild) {\n        parentNode.insertBefore(node.firstChild, node);\n      }\n\n      node.parentNode.removeChild(node);\n    };\n\n    var findSpansByIndex = function (editor, index) {\n      var nodes;\n      var spans = [];\n      nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n\n      return spans;\n    };\n\n    var moveSelection = function (editor, currentIndexState, forward) {\n      var testIndex = currentIndexState.get();\n      var dom = editor.dom;\n      forward = forward !== false;\n\n      if (forward) {\n        testIndex++;\n      } else {\n        testIndex--;\n      }\n\n      dom.removeClass(findSpansByIndex(editor, currentIndexState.get()), 'mce-match-marker-selected');\n      var spans = findSpansByIndex(editor, testIndex);\n\n      if (spans.length) {\n        dom.addClass(findSpansByIndex(editor, testIndex), 'mce-match-marker-selected');\n        editor.selection.scrollIntoView(spans[0]);\n        return testIndex;\n      }\n\n      return -1;\n    };\n\n    var removeNode = function (dom, node) {\n      var parent = node.parentNode;\n      dom.remove(node);\n\n      if (dom.isEmpty(parent)) {\n        dom.remove(parent);\n      }\n    };\n\n    var find = function (editor, currentIndexState, text, matchCase, wholeWord) {\n      text = text.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n      text = text.replace(/\\s/g, '[^\\\\S\\\\r\\\\n]');\n      text = wholeWord ? '\\\\b' + text + '\\\\b' : text;\n      var count = markAllMatches(editor, currentIndexState, new RegExp(text, matchCase ? 'g' : 'gi'));\n\n      if (count) {\n        currentIndexState.set(-1);\n        currentIndexState.set(moveSelection(editor, currentIndexState, true));\n      }\n\n      return count;\n    };\n\n    var next = function (editor, currentIndexState) {\n      var index = moveSelection(editor, currentIndexState, true);\n\n      if (index !== -1) {\n        currentIndexState.set(index);\n      }\n    };\n\n    var prev = function (editor, currentIndexState) {\n      var index = moveSelection(editor, currentIndexState, false);\n\n      if (index !== -1) {\n        currentIndexState.set(index);\n      }\n    };\n\n    var isMatchSpan = function (node) {\n      var matchIndex = getElmIndex(node);\n      return matchIndex !== null && matchIndex.length > 0;\n    };\n\n    var replace = function (editor, currentIndexState, text, forward, all) {\n      var i,\n          nodes,\n          node,\n          matchIndex,\n          currentMatchIndex,\n          nextIndex = currentIndexState.get(),\n          hasMore;\n      forward = forward !== false;\n      node = editor.getBody();\n      nodes = global$1.grep(global$1.toArray(node.getElementsByTagName('span')), isMatchSpan);\n\n      for (i = 0; i < nodes.length; i++) {\n        var nodeIndex = getElmIndex(nodes[i]);\n        matchIndex = currentMatchIndex = parseInt(nodeIndex, 10);\n\n        if (all || matchIndex === currentIndexState.get()) {\n          if (text.length) {\n            nodes[i].firstChild.nodeValue = text;\n            unwrap(nodes[i]);\n          } else {\n            removeNode(editor.dom, nodes[i]);\n          }\n\n          while (nodes[++i]) {\n            matchIndex = parseInt(getElmIndex(nodes[i]), 10);\n\n            if (matchIndex === currentMatchIndex) {\n              removeNode(editor.dom, nodes[i]);\n            } else {\n              i--;\n              break;\n            }\n          }\n\n          if (forward) {\n            nextIndex--;\n          }\n        } else if (currentMatchIndex > currentIndexState.get()) {\n          nodes[i].setAttribute('data-mce-index', currentMatchIndex - 1);\n        }\n      }\n\n      currentIndexState.set(nextIndex);\n\n      if (forward) {\n        hasMore = hasNext(editor, currentIndexState);\n        next(editor, currentIndexState);\n      } else {\n        hasMore = hasPrev(editor, currentIndexState);\n        prev(editor, currentIndexState);\n      }\n\n      return !all && hasMore;\n    };\n\n    var done = function (editor, currentIndexState, keepEditorSelection) {\n      var i, nodes, startContainer, endContainer;\n      nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n\n      for (i = 0; i < nodes.length; i++) {\n        var nodeIndex = getElmIndex(nodes[i]);\n\n        if (nodeIndex !== null && nodeIndex.length) {\n          if (nodeIndex === currentIndexState.get().toString()) {\n            if (!startContainer) {\n              startContainer = nodes[i].firstChild;\n            }\n\n            endContainer = nodes[i].firstChild;\n          }\n\n          unwrap(nodes[i]);\n        }\n      }\n\n      if (startContainer && endContainer) {\n        var rng = editor.dom.createRng();\n        rng.setStart(startContainer, 0);\n        rng.setEnd(endContainer, endContainer.data.length);\n\n        if (keepEditorSelection !== false) {\n          editor.selection.setRng(rng);\n        }\n\n        return rng;\n      }\n    };\n\n    var hasNext = function (editor, currentIndexState) {\n      return findSpansByIndex(editor, currentIndexState.get() + 1).length > 0;\n    };\n\n    var hasPrev = function (editor, currentIndexState) {\n      return findSpansByIndex(editor, currentIndexState.get() - 1).length > 0;\n    };\n\n    var $_ftb750jzjnlpb2kd = {\n      done: done,\n      find: find,\n      next: next,\n      prev: prev,\n      replace: replace,\n      hasNext: hasNext,\n      hasPrev: hasPrev\n    };\n\n    var get = function (editor, currentIndexState) {\n      var done = function (keepEditorSelection) {\n        return $_ftb750jzjnlpb2kd.done(editor, currentIndexState, keepEditorSelection);\n      };\n\n      var find = function (text, matchCase, wholeWord) {\n        return $_ftb750jzjnlpb2kd.find(editor, currentIndexState, text, matchCase, wholeWord);\n      };\n\n      var next = function () {\n        return $_ftb750jzjnlpb2kd.next(editor, currentIndexState);\n      };\n\n      var prev = function () {\n        return $_ftb750jzjnlpb2kd.prev(editor, currentIndexState);\n      };\n\n      var replace = function (text, forward, all) {\n        return $_ftb750jzjnlpb2kd.replace(editor, currentIndexState, text, forward, all);\n      };\n\n      return {\n        done: done,\n        find: find,\n        next: next,\n        prev: prev,\n        replace: replace\n      };\n    };\n\n    var $_1pj7w7jyjnlpb2kb = {\n      get: get\n    };\n\n    var open = function (editor, currentIndexState) {\n      var last = {},\n          selectedText;\n      editor.undoManager.add();\n      selectedText = global$1.trim(editor.selection.getContent({\n        format: 'text'\n      }));\n\n      function updateButtonStates() {\n        win.statusbar.find('#next').disabled($_ftb750jzjnlpb2kd.hasNext(editor, currentIndexState) === false);\n        win.statusbar.find('#prev').disabled($_ftb750jzjnlpb2kd.hasPrev(editor, currentIndexState) === false);\n      }\n\n      function notFoundAlert() {\n        editor.windowManager.alert('Could not find the specified string.', function () {\n          win.find('#find')[0].focus();\n        });\n      }\n\n      var win = editor.windowManager.open({\n        layout: 'flex',\n        pack: 'center',\n        align: 'center',\n        onClose: function () {\n          editor.focus();\n          $_ftb750jzjnlpb2kd.done(editor, currentIndexState);\n          editor.undoManager.add();\n        },\n        onSubmit: function (e) {\n          var count, caseState, text, wholeWord;\n          e.preventDefault();\n          caseState = win.find('#case').checked();\n          wholeWord = win.find('#words').checked();\n          text = win.find('#find').value();\n\n          if (!text.length) {\n            $_ftb750jzjnlpb2kd.done(editor, currentIndexState, false);\n            win.statusbar.items().slice(1).disabled(true);\n            return;\n          }\n\n          if (last.text === text && last.caseState === caseState && last.wholeWord === wholeWord) {\n            if (!$_ftb750jzjnlpb2kd.hasNext(editor, currentIndexState)) {\n              notFoundAlert();\n              return;\n            }\n\n            $_ftb750jzjnlpb2kd.next(editor, currentIndexState);\n            updateButtonStates();\n            return;\n          }\n\n          count = $_ftb750jzjnlpb2kd.find(editor, currentIndexState, text, caseState, wholeWord);\n\n          if (!count) {\n            notFoundAlert();\n          }\n\n          win.statusbar.items().slice(1).disabled(count === 0);\n          updateButtonStates();\n          last = {\n            text: text,\n            caseState: caseState,\n            wholeWord: wholeWord\n          };\n        },\n        buttons: [{\n          text: 'Find',\n          subtype: 'primary',\n          onclick: function () {\n            win.submit();\n          }\n        }, {\n          text: 'Replace',\n          disabled: true,\n          onclick: function () {\n            if (!$_ftb750jzjnlpb2kd.replace(editor, currentIndexState, win.find('#replace').value())) {\n              win.statusbar.items().slice(1).disabled(true);\n              currentIndexState.set(-1);\n              last = {};\n            }\n          }\n        }, {\n          text: 'Replace all',\n          disabled: true,\n          onclick: function () {\n            $_ftb750jzjnlpb2kd.replace(editor, currentIndexState, win.find('#replace').value(), true, true);\n            win.statusbar.items().slice(1).disabled(true);\n            last = {};\n          }\n        }, {\n          type: 'spacer',\n          flex: 1\n        }, {\n          text: 'Prev',\n          name: 'prev',\n          disabled: true,\n          onclick: function () {\n            $_ftb750jzjnlpb2kd.prev(editor, currentIndexState);\n            updateButtonStates();\n          }\n        }, {\n          text: 'Next',\n          name: 'next',\n          disabled: true,\n          onclick: function () {\n            $_ftb750jzjnlpb2kd.next(editor, currentIndexState);\n            updateButtonStates();\n          }\n        }],\n        title: 'Find and replace',\n        items: {\n          type: 'form',\n          padding: 20,\n          labelGap: 30,\n          spacing: 10,\n          items: [{\n            type: 'textbox',\n            name: 'find',\n            size: 40,\n            label: 'Find',\n            value: selectedText\n          }, {\n            type: 'textbox',\n            name: 'replace',\n            size: 40,\n            label: 'Replace with'\n          }, {\n            type: 'checkbox',\n            name: 'case',\n            text: 'Match case',\n            label: ' '\n          }, {\n            type: 'checkbox',\n            name: 'words',\n            text: 'Whole words',\n            label: ' '\n          }]\n        }\n      });\n    };\n\n    var $_1qh3ank3jnlpb2ku = {\n      open: open\n    };\n\n    var register = function (editor, currentIndexState) {\n      editor.addCommand('SearchReplace', function () {\n        $_1qh3ank3jnlpb2ku.open(editor, currentIndexState);\n      });\n    };\n\n    var $_3eag16k2jnlpb2ks = {\n      register: register\n    };\n\n    var showDialog = function (editor, currentIndexState) {\n      return function () {\n        $_1qh3ank3jnlpb2ku.open(editor, currentIndexState);\n      };\n    };\n\n    var register$1 = function (editor, currentIndexState) {\n      editor.addMenuItem('searchreplace', {\n        text: 'Find and replace',\n        shortcut: 'Meta+F',\n        onclick: showDialog(editor, currentIndexState),\n        separator: 'before',\n        context: 'edit'\n      });\n      editor.addButton('searchreplace', {\n        tooltip: 'Find and replace',\n        onclick: showDialog(editor, currentIndexState)\n      });\n      editor.shortcuts.add('Meta+F', '', showDialog(editor, currentIndexState));\n    };\n\n    var $_gi078yk4jnlpb2kz = {\n      register: register$1\n    };\n    global.add('searchreplace', function (editor) {\n      var currentIndexState = Cell(-1);\n      $_3eag16k2jnlpb2ks.register(editor, currentIndexState);\n      $_gi078yk4jnlpb2kz.register(editor, currentIndexState);\n      return $_1pj7w7jyjnlpb2kb.get(editor, currentIndexState);\n    });\n\n    function Plugin() {}\n\n    return Plugin;\n  }();\n})();",{"version":3,"sources":["/Users/shanliguo/Documents/workstudy/vue-form-making/src/lib/tinymce/plugins/searchreplace/plugin.js"],"names":["searchreplace","Cell","initial","value","get","set","v","clone","global","tinymce","util","Tools","resolve","global$1","isContentEditableFalse","node","nodeType","contentEditable","findAndReplaceDOMText","regex","replacementNode","captureGroup","schema","m","matches","text","count","doc","blockElementsMap","hiddenTextElementsMap","shortEndedElementsMap","ownerDocument","getBlockElements","getWhiteSpaceElements","getShortEndedElements","getMatchIndexes","Error","index","cg","indexOf","length","getText","txt","data","nodeName","firstChild","nextSibling","stepThroughMatches","replaceFn","startNode","endNode","startNodeIndex","endNodeIndex","innerNodes","atIndex","curNode","matchLocation","shift","matchIndex","out","push","match","parentNode","genReplacer","makeReplacementNode","stencilNode_1","createElement","fill","cloneNode","setAttribute","appendChild","createTextNode","range","before","after","node_1","substring","insertBefore","el","removeChild","elA","innerEls","i","l","innerNode","innerEl","replaceChild","elB","exec","$_gbwwp0k1jnlpb2kj","getElmIndex","elm","getAttribute","markAllMatches","editor","currentIndexState","marker","dom","create","className","getBody","done","unwrap","findSpansByIndex","nodes","spans","toArray","getElementsByTagName","nodeIndex","toString","moveSelection","forward","testIndex","removeClass","addClass","selection","scrollIntoView","removeNode","parent","remove","isEmpty","find","matchCase","wholeWord","replace","RegExp","next","prev","isMatchSpan","all","currentMatchIndex","nextIndex","hasMore","grep","parseInt","nodeValue","hasNext","hasPrev","keepEditorSelection","startContainer","endContainer","rng","createRng","setStart","setEnd","setRng","$_ftb750jzjnlpb2kd","$_1pj7w7jyjnlpb2kb","open","last","selectedText","undoManager","add","trim","getContent","format","updateButtonStates","win","statusbar","disabled","notFoundAlert","windowManager","alert","focus","layout","pack","align","onClose","onSubmit","e","caseState","preventDefault","checked","items","slice","buttons","subtype","onclick","submit","type","flex","name","title","padding","labelGap","spacing","size","label","$_1qh3ank3jnlpb2ku","register","addCommand","$_3eag16k2jnlpb2ks","showDialog","register$1","addMenuItem","shortcut","separator","context","addButton","tooltip","shortcuts","$_gi078yk4jnlpb2kz","Plugin"],"mappings":"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","sourcesContent":["(function () {\nvar searchreplace = (function () {\n  'use strict';\n\n  var Cell = function (initial) {\n    var value = initial;\n    var get = function () {\n      return value;\n    };\n    var set = function (v) {\n      value = v;\n    };\n    var clone = function () {\n      return Cell(get());\n    };\n    return {\n      get: get,\n      set: set,\n      clone: clone\n    };\n  };\n\n  var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n  function isContentEditableFalse(node) {\n    return node && node.nodeType === 1 && node.contentEditable === 'false';\n  }\n  function findAndReplaceDOMText(regex, node, replacementNode, captureGroup, schema) {\n    var m;\n    var matches = [];\n    var text, count = 0, doc;\n    var blockElementsMap, hiddenTextElementsMap, shortEndedElementsMap;\n    doc = node.ownerDocument;\n    blockElementsMap = schema.getBlockElements();\n    hiddenTextElementsMap = schema.getWhiteSpaceElements();\n    shortEndedElementsMap = schema.getShortEndedElements();\n    function getMatchIndexes(m, captureGroup) {\n      captureGroup = captureGroup || 0;\n      if (!m[0]) {\n        throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n      }\n      var index = m.index;\n      if (captureGroup > 0) {\n        var cg = m[captureGroup];\n        if (!cg) {\n          throw new Error('Invalid capture group');\n        }\n        index += m[0].indexOf(cg);\n        m[0] = cg;\n      }\n      return [\n        index,\n        index + m[0].length,\n        [m[0]]\n      ];\n    }\n    function getText(node) {\n      var txt;\n      if (node.nodeType === 3) {\n        return node.data;\n      }\n      if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n        return '';\n      }\n      txt = '';\n      if (isContentEditableFalse(node)) {\n        return '\\n';\n      }\n      if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n        txt += '\\n';\n      }\n      if (node = node.firstChild) {\n        do {\n          txt += getText(node);\n        } while (node = node.nextSibling);\n      }\n      return txt;\n    }\n    function stepThroughMatches(node, matches, replaceFn) {\n      var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation = matches.shift(), matchIndex = 0;\n      out:\n        while (true) {\n          if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n            atIndex++;\n          }\n          if (curNode.nodeType === 3) {\n            if (!endNode && curNode.length + atIndex >= matchLocation[1]) {\n              endNode = curNode;\n              endNodeIndex = matchLocation[1] - atIndex;\n            } else if (startNode) {\n              innerNodes.push(curNode);\n            }\n            if (!startNode && curNode.length + atIndex > matchLocation[0]) {\n              startNode = curNode;\n              startNodeIndex = matchLocation[0] - atIndex;\n            }\n            atIndex += curNode.length;\n          }\n          if (startNode && endNode) {\n            curNode = replaceFn({\n              startNode: startNode,\n              startNodeIndex: startNodeIndex,\n              endNode: endNode,\n              endNodeIndex: endNodeIndex,\n              innerNodes: innerNodes,\n              match: matchLocation[2],\n              matchIndex: matchIndex\n            });\n            atIndex -= endNode.length - endNodeIndex;\n            startNode = null;\n            endNode = null;\n            innerNodes = [];\n            matchLocation = matches.shift();\n            matchIndex++;\n            if (!matchLocation) {\n              break;\n            }\n          } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n            if (!isContentEditableFalse(curNode)) {\n              curNode = curNode.firstChild;\n              continue;\n            }\n          } else if (curNode.nextSibling) {\n            curNode = curNode.nextSibling;\n            continue;\n          }\n          while (true) {\n            if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              break;\n            } else if (curNode.parentNode !== node) {\n              curNode = curNode.parentNode;\n            } else {\n              break out;\n            }\n          }\n        }\n    }\n    function genReplacer(nodeName) {\n      var makeReplacementNode;\n      if (typeof nodeName !== 'function') {\n        var stencilNode_1 = nodeName.nodeType ? nodeName : doc.createElement(nodeName);\n        makeReplacementNode = function (fill, matchIndex) {\n          var clone = stencilNode_1.cloneNode(false);\n          clone.setAttribute('data-mce-index', matchIndex);\n          if (fill) {\n            clone.appendChild(doc.createTextNode(fill));\n          }\n          return clone;\n        };\n      } else {\n        makeReplacementNode = nodeName;\n      }\n      return function (range) {\n        var before;\n        var after;\n        var parentNode;\n        var startNode = range.startNode;\n        var endNode = range.endNode;\n        var matchIndex = range.matchIndex;\n        if (startNode === endNode) {\n          var node_1 = startNode;\n          parentNode = node_1.parentNode;\n          if (range.startNodeIndex > 0) {\n            before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n            parentNode.insertBefore(before, node_1);\n          }\n          var el = makeReplacementNode(range.match[0], matchIndex);\n          parentNode.insertBefore(el, node_1);\n          if (range.endNodeIndex < node_1.length) {\n            after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n            parentNode.insertBefore(after, node_1);\n          }\n          node_1.parentNode.removeChild(node_1);\n          return el;\n        }\n        before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n        after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n        var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n        var innerEls = [];\n        for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n          var innerNode = range.innerNodes[i];\n          var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n          innerNode.parentNode.replaceChild(innerEl, innerNode);\n          innerEls.push(innerEl);\n        }\n        var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n        parentNode = startNode.parentNode;\n        parentNode.insertBefore(before, startNode);\n        parentNode.insertBefore(elA, startNode);\n        parentNode.removeChild(startNode);\n        parentNode = endNode.parentNode;\n        parentNode.insertBefore(elB, endNode);\n        parentNode.insertBefore(after, endNode);\n        parentNode.removeChild(endNode);\n        return elB;\n      };\n    }\n    text = getText(node);\n    if (!text) {\n      return;\n    }\n    if (regex.global) {\n      while (m = regex.exec(text)) {\n        matches.push(getMatchIndexes(m, captureGroup));\n      }\n    } else {\n      m = text.match(regex);\n      matches.push(getMatchIndexes(m, captureGroup));\n    }\n    if (matches.length) {\n      count = matches.length;\n      stepThroughMatches(node, matches, genReplacer(replacementNode));\n    }\n    return count;\n  }\n  var $_gbwwp0k1jnlpb2kj = { findAndReplaceDOMText: findAndReplaceDOMText };\n\n  var getElmIndex = function (elm) {\n    var value = elm.getAttribute('data-mce-index');\n    if (typeof value === 'number') {\n      return '' + value;\n    }\n    return value;\n  };\n  var markAllMatches = function (editor, currentIndexState, regex) {\n    var node, marker;\n    marker = editor.dom.create('span', { 'data-mce-bogus': 1 });\n    marker.className = 'mce-match-marker';\n    node = editor.getBody();\n    done(editor, currentIndexState, false);\n    return $_gbwwp0k1jnlpb2kj.findAndReplaceDOMText(regex, node, marker, false, editor.schema);\n  };\n  var unwrap = function (node) {\n    var parentNode = node.parentNode;\n    if (node.firstChild) {\n      parentNode.insertBefore(node.firstChild, node);\n    }\n    node.parentNode.removeChild(node);\n  };\n  var findSpansByIndex = function (editor, index) {\n    var nodes;\n    var spans = [];\n    nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n    if (nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        var nodeIndex = getElmIndex(nodes[i]);\n        if (nodeIndex === null || !nodeIndex.length) {\n          continue;\n        }\n        if (nodeIndex === index.toString()) {\n          spans.push(nodes[i]);\n        }\n      }\n    }\n    return spans;\n  };\n  var moveSelection = function (editor, currentIndexState, forward) {\n    var testIndex = currentIndexState.get();\n    var dom = editor.dom;\n    forward = forward !== false;\n    if (forward) {\n      testIndex++;\n    } else {\n      testIndex--;\n    }\n    dom.removeClass(findSpansByIndex(editor, currentIndexState.get()), 'mce-match-marker-selected');\n    var spans = findSpansByIndex(editor, testIndex);\n    if (spans.length) {\n      dom.addClass(findSpansByIndex(editor, testIndex), 'mce-match-marker-selected');\n      editor.selection.scrollIntoView(spans[0]);\n      return testIndex;\n    }\n    return -1;\n  };\n  var removeNode = function (dom, node) {\n    var parent = node.parentNode;\n    dom.remove(node);\n    if (dom.isEmpty(parent)) {\n      dom.remove(parent);\n    }\n  };\n  var find = function (editor, currentIndexState, text, matchCase, wholeWord) {\n    text = text.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    text = text.replace(/\\s/g, '[^\\\\S\\\\r\\\\n]');\n    text = wholeWord ? '\\\\b' + text + '\\\\b' : text;\n    var count = markAllMatches(editor, currentIndexState, new RegExp(text, matchCase ? 'g' : 'gi'));\n    if (count) {\n      currentIndexState.set(-1);\n      currentIndexState.set(moveSelection(editor, currentIndexState, true));\n    }\n    return count;\n  };\n  var next = function (editor, currentIndexState) {\n    var index = moveSelection(editor, currentIndexState, true);\n    if (index !== -1) {\n      currentIndexState.set(index);\n    }\n  };\n  var prev = function (editor, currentIndexState) {\n    var index = moveSelection(editor, currentIndexState, false);\n    if (index !== -1) {\n      currentIndexState.set(index);\n    }\n  };\n  var isMatchSpan = function (node) {\n    var matchIndex = getElmIndex(node);\n    return matchIndex !== null && matchIndex.length > 0;\n  };\n  var replace = function (editor, currentIndexState, text, forward, all) {\n    var i, nodes, node, matchIndex, currentMatchIndex, nextIndex = currentIndexState.get(), hasMore;\n    forward = forward !== false;\n    node = editor.getBody();\n    nodes = global$1.grep(global$1.toArray(node.getElementsByTagName('span')), isMatchSpan);\n    for (i = 0; i < nodes.length; i++) {\n      var nodeIndex = getElmIndex(nodes[i]);\n      matchIndex = currentMatchIndex = parseInt(nodeIndex, 10);\n      if (all || matchIndex === currentIndexState.get()) {\n        if (text.length) {\n          nodes[i].firstChild.nodeValue = text;\n          unwrap(nodes[i]);\n        } else {\n          removeNode(editor.dom, nodes[i]);\n        }\n        while (nodes[++i]) {\n          matchIndex = parseInt(getElmIndex(nodes[i]), 10);\n          if (matchIndex === currentMatchIndex) {\n            removeNode(editor.dom, nodes[i]);\n          } else {\n            i--;\n            break;\n          }\n        }\n        if (forward) {\n          nextIndex--;\n        }\n      } else if (currentMatchIndex > currentIndexState.get()) {\n        nodes[i].setAttribute('data-mce-index', currentMatchIndex - 1);\n      }\n    }\n    currentIndexState.set(nextIndex);\n    if (forward) {\n      hasMore = hasNext(editor, currentIndexState);\n      next(editor, currentIndexState);\n    } else {\n      hasMore = hasPrev(editor, currentIndexState);\n      prev(editor, currentIndexState);\n    }\n    return !all && hasMore;\n  };\n  var done = function (editor, currentIndexState, keepEditorSelection) {\n    var i, nodes, startContainer, endContainer;\n    nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n    for (i = 0; i < nodes.length; i++) {\n      var nodeIndex = getElmIndex(nodes[i]);\n      if (nodeIndex !== null && nodeIndex.length) {\n        if (nodeIndex === currentIndexState.get().toString()) {\n          if (!startContainer) {\n            startContainer = nodes[i].firstChild;\n          }\n          endContainer = nodes[i].firstChild;\n        }\n        unwrap(nodes[i]);\n      }\n    }\n    if (startContainer && endContainer) {\n      var rng = editor.dom.createRng();\n      rng.setStart(startContainer, 0);\n      rng.setEnd(endContainer, endContainer.data.length);\n      if (keepEditorSelection !== false) {\n        editor.selection.setRng(rng);\n      }\n      return rng;\n    }\n  };\n  var hasNext = function (editor, currentIndexState) {\n    return findSpansByIndex(editor, currentIndexState.get() + 1).length > 0;\n  };\n  var hasPrev = function (editor, currentIndexState) {\n    return findSpansByIndex(editor, currentIndexState.get() - 1).length > 0;\n  };\n  var $_ftb750jzjnlpb2kd = {\n    done: done,\n    find: find,\n    next: next,\n    prev: prev,\n    replace: replace,\n    hasNext: hasNext,\n    hasPrev: hasPrev\n  };\n\n  var get = function (editor, currentIndexState) {\n    var done = function (keepEditorSelection) {\n      return $_ftb750jzjnlpb2kd.done(editor, currentIndexState, keepEditorSelection);\n    };\n    var find = function (text, matchCase, wholeWord) {\n      return $_ftb750jzjnlpb2kd.find(editor, currentIndexState, text, matchCase, wholeWord);\n    };\n    var next = function () {\n      return $_ftb750jzjnlpb2kd.next(editor, currentIndexState);\n    };\n    var prev = function () {\n      return $_ftb750jzjnlpb2kd.prev(editor, currentIndexState);\n    };\n    var replace = function (text, forward, all) {\n      return $_ftb750jzjnlpb2kd.replace(editor, currentIndexState, text, forward, all);\n    };\n    return {\n      done: done,\n      find: find,\n      next: next,\n      prev: prev,\n      replace: replace\n    };\n  };\n  var $_1pj7w7jyjnlpb2kb = { get: get };\n\n  var open = function (editor, currentIndexState) {\n    var last = {}, selectedText;\n    editor.undoManager.add();\n    selectedText = global$1.trim(editor.selection.getContent({ format: 'text' }));\n    function updateButtonStates() {\n      win.statusbar.find('#next').disabled($_ftb750jzjnlpb2kd.hasNext(editor, currentIndexState) === false);\n      win.statusbar.find('#prev').disabled($_ftb750jzjnlpb2kd.hasPrev(editor, currentIndexState) === false);\n    }\n    function notFoundAlert() {\n      editor.windowManager.alert('Could not find the specified string.', function () {\n        win.find('#find')[0].focus();\n      });\n    }\n    var win = editor.windowManager.open({\n      layout: 'flex',\n      pack: 'center',\n      align: 'center',\n      onClose: function () {\n        editor.focus();\n        $_ftb750jzjnlpb2kd.done(editor, currentIndexState);\n        editor.undoManager.add();\n      },\n      onSubmit: function (e) {\n        var count, caseState, text, wholeWord;\n        e.preventDefault();\n        caseState = win.find('#case').checked();\n        wholeWord = win.find('#words').checked();\n        text = win.find('#find').value();\n        if (!text.length) {\n          $_ftb750jzjnlpb2kd.done(editor, currentIndexState, false);\n          win.statusbar.items().slice(1).disabled(true);\n          return;\n        }\n        if (last.text === text && last.caseState === caseState && last.wholeWord === wholeWord) {\n          if (!$_ftb750jzjnlpb2kd.hasNext(editor, currentIndexState)) {\n            notFoundAlert();\n            return;\n          }\n          $_ftb750jzjnlpb2kd.next(editor, currentIndexState);\n          updateButtonStates();\n          return;\n        }\n        count = $_ftb750jzjnlpb2kd.find(editor, currentIndexState, text, caseState, wholeWord);\n        if (!count) {\n          notFoundAlert();\n        }\n        win.statusbar.items().slice(1).disabled(count === 0);\n        updateButtonStates();\n        last = {\n          text: text,\n          caseState: caseState,\n          wholeWord: wholeWord\n        };\n      },\n      buttons: [\n        {\n          text: 'Find',\n          subtype: 'primary',\n          onclick: function () {\n            win.submit();\n          }\n        },\n        {\n          text: 'Replace',\n          disabled: true,\n          onclick: function () {\n            if (!$_ftb750jzjnlpb2kd.replace(editor, currentIndexState, win.find('#replace').value())) {\n              win.statusbar.items().slice(1).disabled(true);\n              currentIndexState.set(-1);\n              last = {};\n            }\n          }\n        },\n        {\n          text: 'Replace all',\n          disabled: true,\n          onclick: function () {\n            $_ftb750jzjnlpb2kd.replace(editor, currentIndexState, win.find('#replace').value(), true, true);\n            win.statusbar.items().slice(1).disabled(true);\n            last = {};\n          }\n        },\n        {\n          type: 'spacer',\n          flex: 1\n        },\n        {\n          text: 'Prev',\n          name: 'prev',\n          disabled: true,\n          onclick: function () {\n            $_ftb750jzjnlpb2kd.prev(editor, currentIndexState);\n            updateButtonStates();\n          }\n        },\n        {\n          text: 'Next',\n          name: 'next',\n          disabled: true,\n          onclick: function () {\n            $_ftb750jzjnlpb2kd.next(editor, currentIndexState);\n            updateButtonStates();\n          }\n        }\n      ],\n      title: 'Find and replace',\n      items: {\n        type: 'form',\n        padding: 20,\n        labelGap: 30,\n        spacing: 10,\n        items: [\n          {\n            type: 'textbox',\n            name: 'find',\n            size: 40,\n            label: 'Find',\n            value: selectedText\n          },\n          {\n            type: 'textbox',\n            name: 'replace',\n            size: 40,\n            label: 'Replace with'\n          },\n          {\n            type: 'checkbox',\n            name: 'case',\n            text: 'Match case',\n            label: ' '\n          },\n          {\n            type: 'checkbox',\n            name: 'words',\n            text: 'Whole words',\n            label: ' '\n          }\n        ]\n      }\n    });\n  };\n  var $_1qh3ank3jnlpb2ku = { open: open };\n\n  var register = function (editor, currentIndexState) {\n    editor.addCommand('SearchReplace', function () {\n      $_1qh3ank3jnlpb2ku.open(editor, currentIndexState);\n    });\n  };\n  var $_3eag16k2jnlpb2ks = { register: register };\n\n  var showDialog = function (editor, currentIndexState) {\n    return function () {\n      $_1qh3ank3jnlpb2ku.open(editor, currentIndexState);\n    };\n  };\n  var register$1 = function (editor, currentIndexState) {\n    editor.addMenuItem('searchreplace', {\n      text: 'Find and replace',\n      shortcut: 'Meta+F',\n      onclick: showDialog(editor, currentIndexState),\n      separator: 'before',\n      context: 'edit'\n    });\n    editor.addButton('searchreplace', {\n      tooltip: 'Find and replace',\n      onclick: showDialog(editor, currentIndexState)\n    });\n    editor.shortcuts.add('Meta+F', '', showDialog(editor, currentIndexState));\n  };\n  var $_gi078yk4jnlpb2kz = { register: register$1 };\n\n  global.add('searchreplace', function (editor) {\n    var currentIndexState = Cell(-1);\n    $_3eag16k2jnlpb2ks.register(editor, currentIndexState);\n    $_gi078yk4jnlpb2kz.register(editor, currentIndexState);\n    return $_1pj7w7jyjnlpb2kb.get(editor, currentIndexState);\n  });\n  function Plugin () {\n  }\n\n  return Plugin;\n\n}());\n})();\n"]}]}