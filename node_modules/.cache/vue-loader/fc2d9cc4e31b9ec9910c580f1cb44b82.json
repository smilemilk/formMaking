{"remainingRequest":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetConfig.vue","mtime":1557565504000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Draggable from 'vuedraggable'\n\nexport default {\n  components: {\n    Draggable\n  },\n  props: ['data'],\n  data () {\n    return {\n      validator: {\n        type: null,\n        required: null,\n        pattern: null,\n        range: null,\n        length: null\n      }\n    }\n  },\n  computed: {\n    show () {\n      if (this.data && Object.keys(this.data).length > 0) {\n        return true\n      }\n      return false\n    }\n  },\n  methods: {\n    handleOptionsRemove (index) {\n      if (this.data.type === 'grid') {\n        this.data.columns.splice(index, 1)\n      } else {\n        this.data.options.options.splice(index, 1)\n      }\n      \n    },\n    handleAddOption () {\n      if (this.data.options.showLabel) {\n        this.data.options.options.push({\n          value: '新选项',\n          label: '新选项'\n        })\n      } else {\n        this.data.options.options.push({\n          value: '新选项'\n        })\n      }\n      \n    },\n    handleAddColumn () {\n      this.data.columns.push({\n        span: '',\n        list: []\n      })\n    },\n    generateRule () {\n      this.data.rules = []\n      Object.keys(this.validator).forEach(key => {\n        if (this.validator[key]) {\n          this.data.rules.push(this.validator[key])\n        }\n      })\n    },\n    handleSelectMuliple (value) {\n      if (value) {\n        if (this.data.options.defaultValue) {\n          this.data.options.defaultValue = [this.data.options.defaultValue]\n        } else {\n          this.data.options.defaultValue = []\n        }\n        \n      } else {\n        if (this.data.options.defaultValue.length>0){\n          this.data.options.defaultValue = this.data.options.defaultValue[0]\n        } else {\n          this.data.options.defaultValue = ''\n        }\n        \n      }\n    }\n  },\n  watch: {\n    'data.options.isRange': function(val) {\n      if (typeof val !== 'undefined') {\n        if (val) {\n          this.data.options.defaultValue = null\n        } else {\n          if (Object.keys(this.data.options).indexOf('defaultValue')>=0) \n            this.data.options.defaultValue = ''\n        }\n      }\n    },\n    'data.options.required': function(val) {\n      if (val) {\n        this.validator.required = {required: true, message: `${this.data.name}必须填写`}\n      } else {\n        this.validator.required = null\n      }\n\n      this.$nextTick(() => {\n        this.generateRule()\n      })\n    },\n    'data.options.dataType': function (val) {\n      if (!this.show) {\n        return false\n      }\n      \n      if (val) {\n        this.validator.type = {type: val, message: this.data.name + '格式不正确'}\n      } else {\n        this.validator.type = null\n      }\n\n      this.generateRule()\n    },\n    'data.options.pattern': function (val) {\n      if (!this.show) {\n        return false\n      }\n\n      if (val) {\n        this.validator.pattern = {pattern: val, message: this.data.name + '格式不匹配'}\n      } else {\n        this.validator.pattern = null\n      }\n\n      this.generateRule()\n    }\n  }\n}\n",{"version":3,"sources":["WidgetConfig.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"WidgetConfig.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"show\">\n    <el-form label-position=\"top\">\n      <el-form-item label=\"标题\" v-if=\"data.type!='grid'\">\n        <el-input v-model=\"data.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"宽度\" v-if=\"Object.keys(data.options).indexOf('width')>=0\">\n        <el-input v-model=\"data.options.width\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"高度\" v-if=\"Object.keys(data.options).indexOf('height')>=0\">\n        <el-input v-model=\"data.options.height\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"大小\" v-if=\"Object.keys(data.options).indexOf('size')>=0\">\n        宽度：<el-input style=\"width: 90px;\" type=\"number\" v-model.number=\"data.options.size.width\"></el-input>\n        高度：<el-input style=\"width: 90px;\" type=\"number\" v-model.number=\"data.options.size.height\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"占位内容\" v-if=\"Object.keys(data.options).indexOf('placeholder')>=0 && (data.type!='time' || data.type!='date')\">\n        <el-input v-model=\"data.options.placeholder\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"布局方式\" v-if=\"Object.keys(data.options).indexOf('inline')>=0\">\n        <el-radio-group v-model=\"data.options.inline\">\n          <el-radio-button :label=\"false\">块级</el-radio-button>\n          <el-radio-button :label=\"true\">行内</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"显示输入框\" v-if=\"Object.keys(data.options).indexOf('showInput')>=0\">\n        <el-switch v-model=\"data.options.showInput\" ></el-switch>\n      </el-form-item>\n      <el-form-item label=\"最小值\" v-if=\"Object.keys(data.options).indexOf('min')>=0\">\n        <el-input-number v-model=\"data.options.min\" :min=\"0\" :max=\"100\" :step=\"1\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"最大值\" v-if=\"Object.keys(data.options).indexOf('max')>=0\">\n        <el-input-number v-model=\"data.options.max\" :min=\"0\" :max=\"100\" :step=\"1\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"步长\" v-if=\"Object.keys(data.options).indexOf('step')>=0\">\n        <el-input-number v-model=\"data.options.step\" :min=\"0\" :max=\"100\" :step=\"1\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"是否多选\" v-if=\"data.type=='select' || data.type=='imgupload'\">\n        <el-switch v-model=\"data.options.multiple\" @change=\"handleSelectMuliple\"></el-switch>\n      </el-form-item>\n      <el-form-item label=\"是否可搜索\" v-if=\"data.type=='select'\">\n        <el-switch v-model=\"data.options.filterable\"></el-switch>\n      </el-form-item>\n      <el-form-item label=\"允许半选\" v-if=\"Object.keys(data.options).indexOf('allowHalf')>=0\">\n        <el-switch\n            v-model=\"data.options.allowHalf\"\n          >\n          </el-switch>\n      </el-form-item>\n      <el-form-item label=\"支持透明度选择\" v-if=\"Object.keys(data.options).indexOf('showAlpha')>=0\">\n        <el-switch\n            v-model=\"data.options.showAlpha\"\n          >\n          </el-switch>\n      </el-form-item>\n      <el-form-item label=\"是否显示标签\" v-if=\"Object.keys(data.options).indexOf('showLabel')>=0\">\n        <el-switch\n            v-model=\"data.options.showLabel\"\n          >\n        </el-switch>\n      </el-form-item>\n      <el-form-item label=\"选项\" v-if=\"Object.keys(data.options).indexOf('options')>=0\">\n        <el-radio-group v-model=\"data.options.remote\" size=\"mini\" style=\"margin-bottom:10px;\">\n          <el-radio-button :label=\"false\">静态数据</el-radio-button>\n          <el-radio-button :label=\"true\">远端数据</el-radio-button>\n        </el-radio-group>\n        <template v-if=\"data.options.remote\">\n          <div>\n            <el-input size=\"mini\" style=\"\" v-model=\"data.options.remoteFunc\">\n              <template slot=\"prepend\">远端方法</template>\n            </el-input>\n            <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.value\">\n              <template slot=\"prepend\">值</template>\n            </el-input>\n            <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.label\">\n              <template slot=\"prepend\">标签</template>\n            </el-input>\n          </div>\n        </template>\n        <template v-else>\n          <template v-if=\"data.type=='radio' || (data.type=='select'&&!data.options.multiple)\">\n            <el-radio-group v-model=\"data.options.defaultValue\">\n              <draggable tag=\"ul\" :list=\"data.options.options\" \n                v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\n                handle=\".drag-item\"\n              >\n                <li v-for=\"(item, index) in data.options.options\" :key=\"index\" >\n                  <el-radio\n                    :label=\"item.value\" \n                    style=\"margin-right: 5px;\"\n                  >\n                    <el-input :style=\"{'width': data.options.showLabel? '90px': '190px' }\" size=\"mini\" v-model=\"item.value\"></el-input>\n                    <el-input style=\"width:100px;\" size=\"mini\" v-if=\"data.options.showLabel\" v-model=\"item.label\"></el-input>\n                    <!-- <input v-model=\"item.value\"/> -->\n                  </el-radio>\n                  <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\n                  <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\n                  \n                </li>\n              </draggable>\n              \n            </el-radio-group>\n          </template>\n\n          <template v-if=\"data.type=='checkbox' || (data.type=='select' && data.options.multiple)\">\n            <el-checkbox-group v-model=\"data.options.defaultValue\">\n\n              <draggable tag=\"ul\" :list=\"data.options.options\" \n                v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\n                handle=\".drag-item\"\n              >\n                <li v-for=\"(item, index) in data.options.options\" :key=\"index\" >\n                  <el-checkbox\n                    :label=\"item.value\"\n                    style=\"margin-right: 5px;\"\n                  >\n                    <el-input :style=\"{'width': data.options.showLabel? '90px': '190px' }\" size=\"mini\" v-model=\"item.value\"></el-input>\n                    <el-input style=\"width:100px;\" size=\"mini\" v-if=\"data.options.showLabel\" v-model=\"item.label\"></el-input>\n                  </el-checkbox>\n                  <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\n                  <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\n                  \n                </li>\n              </draggable>\n            </el-checkbox-group>\n          </template>\n          <div style=\"margin-left: 22px;\">\n            <el-button type=\"text\" @click=\"handleAddOption\">添加选项</el-button>\n          </div>\n        </template>\n        \n      </el-form-item>\n\n      <el-form-item label=\"远端数据\" v-if=\"data.type=='cascader'\">\n        <div>\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.remoteFunc\">\n            <template slot=\"prepend\">远端方法</template>\n          </el-input>\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.value\">\n            <template slot=\"prepend\">值</template>\n          </el-input>\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.label\">\n            <template slot=\"prepend\">标签</template>\n          </el-input>\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.children\">\n            <template slot=\"prepend\">子选项</template>\n          </el-input>\n        </div>\n      </el-form-item>\n\n      <el-form-item label=\"默认值\" v-if=\"Object.keys(data.options).indexOf('defaultValue')>=0 && (data.type == 'textarea' || data.type == 'input' || data.type=='rate' || data.type=='color' || data.type=='switch')\">\n        <el-input v-if=\"data.type=='textarea'\" type=\"textarea\" :rows=\"5\" v-model=\"data.options.defaultValue\"></el-input>\n        <el-input v-if=\"data.type=='input'\" v-model=\"data.options.defaultValue\"></el-input>\n        <el-rate v-if=\"data.type == 'rate'\" style=\"display:inline-block;vertical-align: middle;\" :max=\"data.options.max\" :allow-half=\"data.options.allowHalf\" v-model=\"data.options.defaultValue\"></el-rate>\n        <el-button type=\"text\" v-if=\"data.type == 'rate'\" style=\"display:inline-block;vertical-align: middle;margin-left: 10px;\" @click=\"data.options.defaultValue=0\">清空</el-button>\n        <el-color-picker \n          v-if=\"data.type == 'color'\"\n          v-model=\"data.options.defaultValue\"\n          :show-alpha=\"data.options.showAlpha\"\n        ></el-color-picker>\n        <el-switch v-if=\"data.type=='switch'\" v-model=\"data.options.defaultValue\"></el-switch>\n      </el-form-item>\n\n      <template v-if=\"data.type == 'time' || data.type == 'date'\">\n        <el-form-item label=\"显示类型\" v-if=\"data.type == 'date'\">\n          <el-select v-model=\"data.options.type\">\n            <el-option value=\"year\"></el-option>\n            <el-option value=\"month\"></el-option>\n            <el-option value=\"date\"></el-option>\n            <el-option value=\"dates\"></el-option>\n            <!-- <el-option value=\"week\"></el-option> -->\n            <el-option value=\"datetime\"></el-option>\n            <el-option value=\"datetimerange\"></el-option>\n            <el-option value=\"daterange\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"是否为范围选择\" v-if=\"data.type == 'time'\">\n          <el-switch\n            v-model=\"data.options.isRange\"\n          >\n          </el-switch>\n        </el-form-item>\n        <el-form-item label=\"是否获取时间戳\" v-if=\"data.type == 'date'\">\n          <el-switch\n            v-model=\"data.options.timestamp\"\n          >\n          </el-switch>\n        </el-form-item>\n        <el-form-item label=\"占位内容\" v-if=\"(!data.options.isRange && data.type == 'time') || (data.type != 'time' && data.options.type != 'datetimerange' && data.options.type != 'daterange')\">\n          <el-input v-model=\"data.options.placeholder\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开始时间占位内容\" v-if=\"(data.options.isRange) || data.options.type=='datetimerange' || data.options.type=='daterange'\">\n          <el-input v-model=\"data.options.startPlaceholder\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"结束时间占位内容\" v-if=\"data.options.isRange || data.options.type=='datetimerange' || data.options.type=='daterange'\">\n          <el-input v-model=\"data.options.endPlaceholder\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"格式\">\n          <el-input v-model=\"data.options.format\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"默认值\" v-if=\"data.type=='time' && Object.keys(data.options).indexOf('isRange')>=0\">\n          <el-time-picker \n            key=\"1\"\n            style=\"width: 100%;\"\n            v-if=\"!data.options.isRange\"\n            v-model=\"data.options.defaultValue\"\n            :arrowControl=\"data.options.arrowControl\"\n            :value-format=\"data.options.format\"\n          >\n          </el-time-picker>\n          <el-time-picker \n            key=\"2\"\n            v-if=\"data.options.isRange\"\n            style=\"width: 100%;\"\n            v-model=\"data.options.defaultValue\"\n            is-range\n            :arrowControl=\"data.options.arrowControl\"\n            :value-format=\"data.options.format\"\n          >\n          </el-time-picker>\n        </el-form-item>\n      </template>\n\n      <template v-if=\"data.type=='imgupload'\">\n        \n        <el-form-item label=\"最大上传数\">\n          <el-input type=\"number\" v-model.number=\"data.options.length\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"使用七牛上传\">\n          <el-switch v-model=\"data.options.isQiniu\"></el-switch>\n        </el-form-item>\n        <template v-if=\"data.options.isQiniu\">\n          <el-form-item label=\"Domain\" :required=\"true\">\n          <el-input v-model=\"data.options.domain\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"获取七牛Token方法\" :required=\"true\">\n            <el-input v-model=\"data.options.tokenFunc\"></el-input>\n          </el-form-item>\n        </template>\n        <template v-else>\n          <el-form-item label=\"图片上传地址\" :required=\"true\">\n            <el-input v-model=\"data.options.action\"></el-input>\n          </el-form-item>\n        </template>\n      </template>\n\n      <template v-if=\"data.type=='blank'\">\n        <el-form-item label=\"绑定数据类型\">\n          <el-select v-model=\"data.options.defaultType\">\n            <el-option value=\"String\" label=\"字符\"></el-option>\n            <el-option value=\"Object\" label=\"对象\"></el-option>\n            <el-option value=\"Array\" label=\"数组\"></el-option>\n          </el-select>\n        </el-form-item>\n      </template>\n\n      <template v-if=\"data.type == 'grid'\">\n        <el-form-item label=\"栅格间隔\">\n          <el-input type=\"number\" v-model.number=\"data.options.gutter\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"列配置项\">\n          <draggable tag=\"ul\" :list=\"data.columns\" \n            v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\n            handle=\".drag-item\"\n          >\n            <li v-for=\"(item, index) in data.columns\" :key=\"index\" >\n              <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\n              <el-input placeholder=\"栅格值\" size=\"mini\" style=\"width: 100px;\" type=\"number\" v-model.number=\"item.span\"></el-input>\n              \n              <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\n              \n            </li>\n          </draggable>\n          <div style=\"margin-left: 22px;\">\n            <el-button type=\"text\" @click=\"handleAddColumn\">添加列</el-button>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"水平排列方式\">\n          <el-select v-model=\"data.options.justify\">\n            <el-option value=\"start\" label=\"左对齐\"></el-option>\n            <el-option value=\"end\" label=\"右对齐\"></el-option>\n            <el-option value=\"center\" label=\"居中\"></el-option>\n            <el-option value=\"space-around\" label=\"两侧间隔相等\"></el-option>\n            <el-option value=\"space-between\" label=\"两端对齐\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"垂直排列方式\">\n          <el-select v-model=\"data.options.align\">\n            <el-option value=\"top\" label=\"顶部对齐\"></el-option>\n            <el-option value=\"middle\" label=\"居中\"></el-option>\n            <el-option value=\"bottom\" label=\"底部对齐\"></el-option>\n          </el-select>\n        </el-form-item>\n      </template>\n      \n\n      <template v-if=\"data.type != 'grid'\">\n        \n        <el-form-item label=\"数据绑定Key\">\n          <el-input v-model=\"data.model\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"操作属性\">\n          <el-checkbox v-model=\"data.options.readonly\" v-if=\"Object.keys(data.options).indexOf('readonly')>=0\">完全只读</el-checkbox>\n          <el-checkbox v-model=\"data.options.disabled\" v-if=\"Object.keys(data.options).indexOf('disabled')>=0\">禁用\t</el-checkbox>\n          <el-checkbox v-model=\"data.options.editable\" v-if=\"Object.keys(data.options).indexOf('editable')>=0\">文本框可输入</el-checkbox>\n          <el-checkbox v-model=\"data.options.clearable\" v-if=\"Object.keys(data.options).indexOf('clearable')>=0\">显示清除按钮</el-checkbox>\n          <el-checkbox v-model=\"data.options.arrowControl\" v-if=\"Object.keys(data.options).indexOf('arrowControl')>=0\">使用箭头进行时间选择</el-checkbox>\n          <el-checkbox v-model=\"data.options.isDelete\" v-if=\"Object.keys(data.options).indexOf('isDelete')>=0\">删除</el-checkbox>\n          <el-checkbox v-model=\"data.options.isEdit\" v-if=\"Object.keys(data.options).indexOf('isEdit')>=0\">编辑</el-checkbox>\n          \n        </el-form-item>\n        <el-form-item label=\"校验\">\n          <div>\n            <el-checkbox v-model=\"data.options.required\">必填</el-checkbox>\n          </div>\n          <el-select v-if=\"Object.keys(data.options).indexOf('dataType')>=0\" v-model=\"data.options.dataType\" size=\"mini\" >\n            <el-option value=\"string\" label=\"字符串\"></el-option>\n            <el-option value=\"number\" label=\"数字\"></el-option>\n            <el-option value=\"boolean\" label=\"布尔值\"></el-option>\n            <el-option value=\"integer\" label=\"整数\"></el-option>\n            <el-option value=\"float\" label=\"浮点数\"></el-option>\n            <el-option value=\"url\" label=\"URL地址\"></el-option>\n            <el-option value=\"email\" label=\"邮箱地址\"></el-option>\n            <el-option value=\"hex\" label=\"十六进制\"></el-option>\n          </el-select>\n          \n          <div v-if=\"Object.keys(data.options).indexOf('pattern')>=0\">\n            <el-input size=\"mini\" v-model.lazy=\"data.options.pattern\"  style=\" width: 240px;\" placeholder=\"填写正则表达式\"></el-input>\n          </div>\n        </el-form-item>\n      </template>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport Draggable from 'vuedraggable'\n\nexport default {\n  components: {\n    Draggable\n  },\n  props: ['data'],\n  data () {\n    return {\n      validator: {\n        type: null,\n        required: null,\n        pattern: null,\n        range: null,\n        length: null\n      }\n    }\n  },\n  computed: {\n    show () {\n      if (this.data && Object.keys(this.data).length > 0) {\n        return true\n      }\n      return false\n    }\n  },\n  methods: {\n    handleOptionsRemove (index) {\n      if (this.data.type === 'grid') {\n        this.data.columns.splice(index, 1)\n      } else {\n        this.data.options.options.splice(index, 1)\n      }\n      \n    },\n    handleAddOption () {\n      if (this.data.options.showLabel) {\n        this.data.options.options.push({\n          value: '新选项',\n          label: '新选项'\n        })\n      } else {\n        this.data.options.options.push({\n          value: '新选项'\n        })\n      }\n      \n    },\n    handleAddColumn () {\n      this.data.columns.push({\n        span: '',\n        list: []\n      })\n    },\n    generateRule () {\n      this.data.rules = []\n      Object.keys(this.validator).forEach(key => {\n        if (this.validator[key]) {\n          this.data.rules.push(this.validator[key])\n        }\n      })\n    },\n    handleSelectMuliple (value) {\n      if (value) {\n        if (this.data.options.defaultValue) {\n          this.data.options.defaultValue = [this.data.options.defaultValue]\n        } else {\n          this.data.options.defaultValue = []\n        }\n        \n      } else {\n        if (this.data.options.defaultValue.length>0){\n          this.data.options.defaultValue = this.data.options.defaultValue[0]\n        } else {\n          this.data.options.defaultValue = ''\n        }\n        \n      }\n    }\n  },\n  watch: {\n    'data.options.isRange': function(val) {\n      if (typeof val !== 'undefined') {\n        if (val) {\n          this.data.options.defaultValue = null\n        } else {\n          if (Object.keys(this.data.options).indexOf('defaultValue')>=0) \n            this.data.options.defaultValue = ''\n        }\n      }\n    },\n    'data.options.required': function(val) {\n      if (val) {\n        this.validator.required = {required: true, message: `${this.data.name}必须填写`}\n      } else {\n        this.validator.required = null\n      }\n\n      this.$nextTick(() => {\n        this.generateRule()\n      })\n    },\n    'data.options.dataType': function (val) {\n      if (!this.show) {\n        return false\n      }\n      \n      if (val) {\n        this.validator.type = {type: val, message: this.data.name + '格式不正确'}\n      } else {\n        this.validator.type = null\n      }\n\n      this.generateRule()\n    },\n    'data.options.pattern': function (val) {\n      if (!this.show) {\n        return false\n      }\n\n      if (val) {\n        this.validator.pattern = {pattern: val, message: this.data.name + '格式不匹配'}\n      } else {\n        this.validator.pattern = null\n      }\n\n      this.generateRule()\n    }\n  }\n}\n</script>\n"]}]}