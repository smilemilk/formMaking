{"remainingRequest":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetFormItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetFormItem.vue","mtime":1551936177000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FmUpload from './Upload'\nimport FmEditor from './Editor/tinymce'\nexport default {\n  props: ['element', 'select', 'index', 'data'],\n  components: {\n    FmUpload,\n    FmEditor\n  },\n  data () {\n    return {\n      selectWidget: this.select\n    }\n  },\n  mounted () {\n    \n  },\n  methods: {\n    handleSelectWidget (index) {\n      this.selectWidget = this.data.list[index]\n    },\n    handleWidgetDelete (index) {\n      if (this.data.list.length - 1 === index) {\n        if (index === 0) {\n          this.selectWidget = {}\n        } else {\n          this.selectWidget = this.data.list[index - 1]\n        }\n      } else {\n        this.selectWidget = this.data.list[index + 1]\n      }\n\n      this.$nextTick(() => {\n        this.data.list.splice(index, 1)\n      })\n    },\n    handleWidgetClone (index) {\n      let cloneData = {\n        ...this.data.list[index],\n        options: {...this.data.list[index].options},\n        key: Date.parse(new Date()) + '_' + Math.ceil(Math.random() * 99999)\n      }\n\n      if (this.data.list[index].type === 'radio' || this.data.list[index].type === 'checkbox') {\n\n        cloneData = {\n          ...cloneData,\n          options: {\n            ...cloneData.options,\n            options: cloneData.options.options.map(item => ({...item}))\n          }\n        }\n      }\n\n      this.data.list.splice(index, 0, cloneData)\n\n      this.$nextTick(() => {\n        this.selectWidget = this.data.list[index + 1]\n      })\n    },\n  },\n  watch: {\n    select (val) {\n      this.selectWidget = val\n    },\n    selectWidget: {\n      handler (val) {\n        this.$emit('update:select', val)\n      },\n      deep: true\n    }\n  }\n}\n",{"version":3,"sources":["WidgetFormItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WidgetFormItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-form-item class=\"widget-view \"\n      v-if=\"element && element.key\" \n      :class=\"{active: selectWidget.key == element.key, 'is_req': element.options.required}\"\n      :label=\"element.name\"\n      @click.native.stop=\"handleSelectWidget(index)\"\n    >\n        <template v-if=\"element.type == 'input'\">\n          <el-input \n            v-model=\"element.options.defaultValue\"\n            :style=\"{width: element.options.width}\"\n            :placeholder=\"element.options.placeholder\"\n          ></el-input>\n        </template>\n\n        <template v-if=\"element.type == 'textarea'\">\n          <el-input type=\"textarea\" :rows=\"5\"\n            v-model=\"element.options.defaultValue\"\n            :style=\"{width: element.options.width}\"\n            :disabled=\"element.options.disabled\"\n            :placeholder=\"element.options.placeholder\"\n          ></el-input>\n        </template>\n\n        <template v-if=\"element.type == 'number'\">\n          <el-input-number \n            v-model=\"element.options.defaultValue\" \n            :disabled=\"element.options.disabled\"\n            :controls-position=\"element.options.controlsPosition\"\n            :style=\"{width: element.options.width}\"\n          ></el-input-number>\n        </template>\n\n        <template v-if=\"element.type == 'radio'\">\n          <el-radio-group v-model=\"element.options.defaultValue\"\n            :style=\"{width: element.options.width}\"\n          >\n            <el-radio  \n              :style=\"{display: element.options.inline ? 'inline-block' : 'block'}\"\n              :label=\"item.value\" v-for=\"(item, index) in element.options.options\" :key=\"item.value + index\"\n            >\n              {{element.options.showLabel ? item.label : item.value}}\n            </el-radio>\n          </el-radio-group>\n        </template>\n\n        <template v-if=\"element.type == 'checkbox'\">\n          <el-checkbox-group v-model=\"element.options.defaultValue\"\n            :style=\"{width: element.options.width}\"\n          >\n            <el-checkbox\n              :style=\"{display: element.options.inline ? 'inline-block' : 'block'}\"\n              :label=\"item.value\" v-for=\"(item, index) in element.options.options\" :key=\"item.value + index\"\n            >\n              {{element.options.showLabel ? item.label : item.value}}\n            </el-checkbox>\n          </el-checkbox-group>\n        </template>\n\n        <template v-if=\"element.type == 'time'\">\n          <el-time-picker \n            v-model=\"element.options.defaultValue\"\n            :is-range=\"element.options.isRange\"\n            :placeholder=\"element.options.placeholder\"\n            :start-placeholder=\"element.options.startPlaceholder\"\n            :end-placeholder=\"element.options.endPlaceholder\"\n            :readonly=\"element.options.readonly\"\n            :disabled=\"element.options.disabled\"\n            :editable=\"element.options.editable\"\n            :clearable=\"element.options.clearable\"\n            :arrowControl=\"element.options.arrowControl\"\n            :style=\"{width: element.options.width}\"\n          >\n          </el-time-picker>\n        </template>\n\n        <template v-if=\"element.type == 'date'\">\n          <el-date-picker\n            v-model=\"element.options.defaultValue\"\n            :type=\"element.options.type\"\n            :is-range=\"element.options.isRange\"\n            :placeholder=\"element.options.placeholder\"\n            :start-placeholder=\"element.options.startPlaceholder\"\n            :end-placeholder=\"element.options.endPlaceholder\"\n            :readonly=\"element.options.readonly\"\n            :disabled=\"element.options.disabled\"\n            :editable=\"element.options.editable\"\n            :clearable=\"element.options.clearable\"\n            :style=\"{width: element.options.width}\"  \n          >\n          </el-date-picker>\n        </template>\n\n        <template v-if=\"element.type == 'rate'\">\n          <el-rate v-model=\"element.options.defaultValue\"\n            :max=\"element.options.max\"\n            :disabled=\"element.options.disabled\"\n            :allow-half=\"element.options.allowHalf\"\n          ></el-rate>\n        </template>\n\n        <template v-if=\"element.type == 'color'\">\n          <el-color-picker \n            v-model=\"element.options.defaultValue\"\n            :disabled=\"element.options.disabled\"\n            :show-alpha=\"element.options.showAlpha\"\n          ></el-color-picker>\n        </template>\n\n        <template v-if=\"element.type == 'select'\">\n          <el-select\n            v-model=\"element.options.defaultValue\"\n            :disabled=\"element.options.disabled\"\n            :multiple=\"element.options.multiple\"\n            :clearable=\"element.options.clearable\"\n            :placeholder=\"element.options.placeholder\"\n            :style=\"{width: element.options.width}\"\n          >\n            <el-option v-for=\"item in element.options.options\" :key=\"item.value\" :value=\"item.value\" :label=\"element.options.showLabel?item.label:item.value\"></el-option>\n          </el-select>\n        </template>\n\n        <template v-if=\"element.type=='switch'\">\n          <el-switch\n            v-model=\"element.options.defaultValue\"\n            :disabled=\"element.options.disabled\"\n          >\n          </el-switch>\n        </template>\n\n        <template v-if=\"element.type=='slider'\">\n          <el-slider \n            v-model=\"element.options.defaultValue\"\n            :min=\"element.options.min\"\n            :max=\"element.options.max\"\n            :disabled=\"element.options.disabled\"\n            :step=\"element.options.step\"\n            :show-input=\"element.options.showInput\"\n            :range=\"element.options.range\"\n            :style=\"{width: element.options.width}\"\n          ></el-slider>\n        </template>\n\n        <template v-if=\"element.type=='imgupload'\">\n          <fm-upload\n            v-model=\"element.options.defaultValue\"\n            :disabled=\"element.options.disabled\"\n            :style=\"{'width': element.options.width}\"\n            :width=\"element.options.size.width\"\n            :height=\"element.options.size.height\"\n            token=\"xxx\"\n            domain=\"xxx\"\n          >\n            \n          </fm-upload>\n        </template>\n\n        <template v-if=\"element.type == 'cascader'\">\n          <el-cascader\n            v-model=\"element.options.defaultValue\"\n            :disabled=\"element.options.disabled\"\n            :clearable=\"element.options.clearable\"\n            :placeholder=\"element.options.placeholder\"\n            :style=\"{width: element.options.width}\"\n            :options=\"element.options.remoteOptions\"\n          >\n\n          </el-cascader>\n        </template>\n\n        <template v-if=\"element.type == 'editor'\">\n          <fm-editor\n            v-model=\"element.options.defaultValue\"\n            :width=\"element.options.width\"\n            :height=\"element.options.height\"\n          >\n\n          </fm-editor>\n        </template>\n\n        <template v-if=\"element.type=='blank'\">\n          <div style=\"height: 50px;color: #999;background: #eee;line-height:50px;text-align:center;\">自定义区域</div>\n        </template>\n\n        <el-button title=\"删除\" @click.stop=\"handleWidgetDelete(index)\" class=\"widget-action-delete\" v-if=\"selectWidget.key == element.key\" circle plain type=\"danger\">\n          <!-- <icon name=\"icon-trash\" style=\"width: 12px;height: 12px;\"></icon> -->\n          <i class=\"iconfont icon-trash\"></i>\n        </el-button>\n        <el-button title=\"复制\" @click.stop=\"handleWidgetClone(index)\" class=\"widget-action-clone\" v-if=\"selectWidget.key == element.key\" circle plain type=\"primary\">\n          <!-- <icon name=\"icon-icon_clone\" style=\"width: 12px;height: 12px;\"></icon> -->\n          <i class=\"iconfont icon-icon_clone\"></i>\n        </el-button>\n        \n    </el-form-item>\n</template>\n\n<script>\nimport FmUpload from './Upload'\nimport FmEditor from './Editor/tinymce'\nexport default {\n  props: ['element', 'select', 'index', 'data'],\n  components: {\n    FmUpload,\n    FmEditor\n  },\n  data () {\n    return {\n      selectWidget: this.select\n    }\n  },\n  mounted () {\n    \n  },\n  methods: {\n    handleSelectWidget (index) {\n      this.selectWidget = this.data.list[index]\n    },\n    handleWidgetDelete (index) {\n      if (this.data.list.length - 1 === index) {\n        if (index === 0) {\n          this.selectWidget = {}\n        } else {\n          this.selectWidget = this.data.list[index - 1]\n        }\n      } else {\n        this.selectWidget = this.data.list[index + 1]\n      }\n\n      this.$nextTick(() => {\n        this.data.list.splice(index, 1)\n      })\n    },\n    handleWidgetClone (index) {\n      let cloneData = {\n        ...this.data.list[index],\n        options: {...this.data.list[index].options},\n        key: Date.parse(new Date()) + '_' + Math.ceil(Math.random() * 99999)\n      }\n\n      if (this.data.list[index].type === 'radio' || this.data.list[index].type === 'checkbox') {\n\n        cloneData = {\n          ...cloneData,\n          options: {\n            ...cloneData.options,\n            options: cloneData.options.options.map(item => ({...item}))\n          }\n        }\n      }\n\n      this.data.list.splice(index, 0, cloneData)\n\n      this.$nextTick(() => {\n        this.selectWidget = this.data.list[index + 1]\n      })\n    },\n  },\n  watch: {\n    select (val) {\n      this.selectWidget = val\n    },\n    selectWidget: {\n      handler (val) {\n        this.$emit('update:select', val)\n      },\n      deep: true\n    }\n  }\n}\n</script>\n"]}]}