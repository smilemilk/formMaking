{"remainingRequest":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetConfig.vue?vue&type=template&id=67efd7d6&","dependencies":[{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/src/components/WidgetConfig.vue","mtime":1557565504000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shanliguo/Documents/workstudy/vue-form-making/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.show\n    ? _c(\n        \"div\",\n        [\n          _c(\n            \"el-form\",\n            { attrs: { \"label-position\": \"top\" } },\n            [\n              _vm.data.type != \"grid\"\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"标题\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.data.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data, \"name\", $$v)\n                          },\n                          expression: \"data.name\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"width\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"宽度\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.data.options.width,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"width\", $$v)\n                          },\n                          expression: \"data.options.width\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"height\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"高度\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.data.options.height,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"height\", $$v)\n                          },\n                          expression: \"data.options.height\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"size\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"大小\" } },\n                    [\n                      _vm._v(\"\\n      宽度：\"),\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"90px\" },\n                        attrs: { type: \"number\" },\n                        model: {\n                          value: _vm.data.options.size.width,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.data.options.size,\n                              \"width\",\n                              _vm._n($$v)\n                            )\n                          },\n                          expression: \"data.options.size.width\"\n                        }\n                      }),\n                      _vm._v(\"\\n      高度：\"),\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"90px\" },\n                        attrs: { type: \"number\" },\n                        model: {\n                          value: _vm.data.options.size.height,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.data.options.size,\n                              \"height\",\n                              _vm._n($$v)\n                            )\n                          },\n                          expression: \"data.options.size.height\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"placeholder\") >= 0 &&\n              (_vm.data.type != \"time\" || _vm.data.type != \"date\")\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"占位内容\" } },\n                    [\n                      _c(\"el-input\", {\n                        model: {\n                          value: _vm.data.options.placeholder,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"placeholder\", $$v)\n                          },\n                          expression: \"data.options.placeholder\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"inline\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"布局方式\" } },\n                    [\n                      _c(\n                        \"el-radio-group\",\n                        {\n                          model: {\n                            value: _vm.data.options.inline,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data.options, \"inline\", $$v)\n                            },\n                            expression: \"data.options.inline\"\n                          }\n                        },\n                        [\n                          _c(\"el-radio-button\", { attrs: { label: false } }, [\n                            _vm._v(\"块级\")\n                          ]),\n                          _c(\"el-radio-button\", { attrs: { label: true } }, [\n                            _vm._v(\"行内\")\n                          ])\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"showInput\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"显示输入框\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.data.options.showInput,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"showInput\", $$v)\n                          },\n                          expression: \"data.options.showInput\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"min\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"最小值\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: { min: 0, max: 100, step: 1 },\n                        model: {\n                          value: _vm.data.options.min,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"min\", $$v)\n                          },\n                          expression: \"data.options.min\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"max\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"最大值\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: { min: 0, max: 100, step: 1 },\n                        model: {\n                          value: _vm.data.options.max,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"max\", $$v)\n                          },\n                          expression: \"data.options.max\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"step\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"步长\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: { min: 0, max: 100, step: 1 },\n                        model: {\n                          value: _vm.data.options.step,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"step\", $$v)\n                          },\n                          expression: \"data.options.step\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.data.type == \"select\" || _vm.data.type == \"imgupload\"\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"是否多选\" } },\n                    [\n                      _c(\"el-switch\", {\n                        on: { change: _vm.handleSelectMuliple },\n                        model: {\n                          value: _vm.data.options.multiple,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"multiple\", $$v)\n                          },\n                          expression: \"data.options.multiple\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.data.type == \"select\"\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"是否可搜索\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.data.options.filterable,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"filterable\", $$v)\n                          },\n                          expression: \"data.options.filterable\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"allowHalf\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"允许半选\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.data.options.allowHalf,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"allowHalf\", $$v)\n                          },\n                          expression: \"data.options.allowHalf\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"showAlpha\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"支持透明度选择\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.data.options.showAlpha,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"showAlpha\", $$v)\n                          },\n                          expression: \"data.options.showAlpha\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"showLabel\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"是否显示标签\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.data.options.showLabel,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data.options, \"showLabel\", $$v)\n                          },\n                          expression: \"data.options.showLabel\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"options\") >= 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"选项\" } },\n                    [\n                      _c(\n                        \"el-radio-group\",\n                        {\n                          staticStyle: { \"margin-bottom\": \"10px\" },\n                          attrs: { size: \"mini\" },\n                          model: {\n                            value: _vm.data.options.remote,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data.options, \"remote\", $$v)\n                            },\n                            expression: \"data.options.remote\"\n                          }\n                        },\n                        [\n                          _c(\"el-radio-button\", { attrs: { label: false } }, [\n                            _vm._v(\"静态数据\")\n                          ]),\n                          _c(\"el-radio-button\", { attrs: { label: true } }, [\n                            _vm._v(\"远端数据\")\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm.data.options.remote\n                        ? [\n                            _c(\n                              \"div\",\n                              [\n                                _c(\n                                  \"el-input\",\n                                  {\n                                    attrs: { size: \"mini\" },\n                                    model: {\n                                      value: _vm.data.options.remoteFunc,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.data.options,\n                                          \"remoteFunc\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"data.options.remoteFunc\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"template\", { slot: \"prepend\" }, [\n                                      _vm._v(\"远端方法\")\n                                    ])\n                                  ],\n                                  2\n                                ),\n                                _c(\n                                  \"el-input\",\n                                  {\n                                    attrs: { size: \"mini\" },\n                                    model: {\n                                      value: _vm.data.options.props.value,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.data.options.props,\n                                          \"value\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"data.options.props.value\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"template\", { slot: \"prepend\" }, [\n                                      _vm._v(\"值\")\n                                    ])\n                                  ],\n                                  2\n                                ),\n                                _c(\n                                  \"el-input\",\n                                  {\n                                    attrs: { size: \"mini\" },\n                                    model: {\n                                      value: _vm.data.options.props.label,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.data.options.props,\n                                          \"label\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"data.options.props.label\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"template\", { slot: \"prepend\" }, [\n                                      _vm._v(\"标签\")\n                                    ])\n                                  ],\n                                  2\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        : [\n                            _vm.data.type == \"radio\" ||\n                            (_vm.data.type == \"select\" &&\n                              !_vm.data.options.multiple)\n                              ? [\n                                  _c(\n                                    \"el-radio-group\",\n                                    {\n                                      model: {\n                                        value: _vm.data.options.defaultValue,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.data.options,\n                                            \"defaultValue\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"data.options.defaultValue\"\n                                      }\n                                    },\n                                    [\n                                      _c(\n                                        \"draggable\",\n                                        _vm._b(\n                                          {\n                                            attrs: {\n                                              tag: \"ul\",\n                                              list: _vm.data.options.options,\n                                              handle: \".drag-item\"\n                                            }\n                                          },\n                                          \"draggable\",\n                                          {\n                                            group: { name: \"options\" },\n                                            ghostClass: \"ghost\",\n                                            handle: \".drag-item\"\n                                          },\n                                          false\n                                        ),\n                                        _vm._l(\n                                          _vm.data.options.options,\n                                          function(item, index) {\n                                            return _c(\n                                              \"li\",\n                                              { key: index },\n                                              [\n                                                _c(\n                                                  \"el-radio\",\n                                                  {\n                                                    staticStyle: {\n                                                      \"margin-right\": \"5px\"\n                                                    },\n                                                    attrs: { label: item.value }\n                                                  },\n                                                  [\n                                                    _c(\"el-input\", {\n                                                      style: {\n                                                        width: _vm.data.options\n                                                          .showLabel\n                                                          ? \"90px\"\n                                                          : \"190px\"\n                                                      },\n                                                      attrs: { size: \"mini\" },\n                                                      model: {\n                                                        value: item.value,\n                                                        callback: function(\n                                                          $$v\n                                                        ) {\n                                                          _vm.$set(\n                                                            item,\n                                                            \"value\",\n                                                            $$v\n                                                          )\n                                                        },\n                                                        expression: \"item.value\"\n                                                      }\n                                                    }),\n                                                    _vm.data.options.showLabel\n                                                      ? _c(\"el-input\", {\n                                                          staticStyle: {\n                                                            width: \"100px\"\n                                                          },\n                                                          attrs: {\n                                                            size: \"mini\"\n                                                          },\n                                                          model: {\n                                                            value: item.label,\n                                                            callback: function(\n                                                              $$v\n                                                            ) {\n                                                              _vm.$set(\n                                                                item,\n                                                                \"label\",\n                                                                $$v\n                                                              )\n                                                            },\n                                                            expression:\n                                                              \"item.label\"\n                                                          }\n                                                        })\n                                                      : _vm._e()\n                                                  ],\n                                                  1\n                                                ),\n                                                _c(\n                                                  \"i\",\n                                                  {\n                                                    staticClass: \"drag-item\",\n                                                    staticStyle: {\n                                                      \"font-size\": \"16px\",\n                                                      margin: \"0 5px\",\n                                                      cursor: \"move\"\n                                                    }\n                                                  },\n                                                  [\n                                                    _c(\"i\", {\n                                                      staticClass:\n                                                        \"iconfont icon-icon_bars\"\n                                                    })\n                                                  ]\n                                                ),\n                                                _c(\"el-button\", {\n                                                  staticStyle: {\n                                                    padding: \"4px\",\n                                                    \"margin-left\": \"5px\"\n                                                  },\n                                                  attrs: {\n                                                    circle: \"\",\n                                                    plain: \"\",\n                                                    type: \"danger\",\n                                                    size: \"mini\",\n                                                    icon: \"el-icon-minus\"\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      return _vm.handleOptionsRemove(\n                                                        index\n                                                      )\n                                                    }\n                                                  }\n                                                })\n                                              ],\n                                              1\n                                            )\n                                          }\n                                        ),\n                                        0\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ]\n                              : _vm._e(),\n                            _vm.data.type == \"checkbox\" ||\n                            (_vm.data.type == \"select\" &&\n                              _vm.data.options.multiple)\n                              ? [\n                                  _c(\n                                    \"el-checkbox-group\",\n                                    {\n                                      model: {\n                                        value: _vm.data.options.defaultValue,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.data.options,\n                                            \"defaultValue\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"data.options.defaultValue\"\n                                      }\n                                    },\n                                    [\n                                      _c(\n                                        \"draggable\",\n                                        _vm._b(\n                                          {\n                                            attrs: {\n                                              tag: \"ul\",\n                                              list: _vm.data.options.options,\n                                              handle: \".drag-item\"\n                                            }\n                                          },\n                                          \"draggable\",\n                                          {\n                                            group: { name: \"options\" },\n                                            ghostClass: \"ghost\",\n                                            handle: \".drag-item\"\n                                          },\n                                          false\n                                        ),\n                                        _vm._l(\n                                          _vm.data.options.options,\n                                          function(item, index) {\n                                            return _c(\n                                              \"li\",\n                                              { key: index },\n                                              [\n                                                _c(\n                                                  \"el-checkbox\",\n                                                  {\n                                                    staticStyle: {\n                                                      \"margin-right\": \"5px\"\n                                                    },\n                                                    attrs: { label: item.value }\n                                                  },\n                                                  [\n                                                    _c(\"el-input\", {\n                                                      style: {\n                                                        width: _vm.data.options\n                                                          .showLabel\n                                                          ? \"90px\"\n                                                          : \"190px\"\n                                                      },\n                                                      attrs: { size: \"mini\" },\n                                                      model: {\n                                                        value: item.value,\n                                                        callback: function(\n                                                          $$v\n                                                        ) {\n                                                          _vm.$set(\n                                                            item,\n                                                            \"value\",\n                                                            $$v\n                                                          )\n                                                        },\n                                                        expression: \"item.value\"\n                                                      }\n                                                    }),\n                                                    _vm.data.options.showLabel\n                                                      ? _c(\"el-input\", {\n                                                          staticStyle: {\n                                                            width: \"100px\"\n                                                          },\n                                                          attrs: {\n                                                            size: \"mini\"\n                                                          },\n                                                          model: {\n                                                            value: item.label,\n                                                            callback: function(\n                                                              $$v\n                                                            ) {\n                                                              _vm.$set(\n                                                                item,\n                                                                \"label\",\n                                                                $$v\n                                                              )\n                                                            },\n                                                            expression:\n                                                              \"item.label\"\n                                                          }\n                                                        })\n                                                      : _vm._e()\n                                                  ],\n                                                  1\n                                                ),\n                                                _c(\n                                                  \"i\",\n                                                  {\n                                                    staticClass: \"drag-item\",\n                                                    staticStyle: {\n                                                      \"font-size\": \"16px\",\n                                                      margin: \"0 5px\",\n                                                      cursor: \"move\"\n                                                    }\n                                                  },\n                                                  [\n                                                    _c(\"i\", {\n                                                      staticClass:\n                                                        \"iconfont icon-icon_bars\"\n                                                    })\n                                                  ]\n                                                ),\n                                                _c(\"el-button\", {\n                                                  staticStyle: {\n                                                    padding: \"4px\",\n                                                    \"margin-left\": \"5px\"\n                                                  },\n                                                  attrs: {\n                                                    circle: \"\",\n                                                    plain: \"\",\n                                                    type: \"danger\",\n                                                    size: \"mini\",\n                                                    icon: \"el-icon-minus\"\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      return _vm.handleOptionsRemove(\n                                                        index\n                                                      )\n                                                    }\n                                                  }\n                                                })\n                                              ],\n                                              1\n                                            )\n                                          }\n                                        ),\n                                        0\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ]\n                              : _vm._e(),\n                            _c(\n                              \"div\",\n                              { staticStyle: { \"margin-left\": \"22px\" } },\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: { type: \"text\" },\n                                    on: { click: _vm.handleAddOption }\n                                  },\n                                  [_vm._v(\"添加选项\")]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                    ],\n                    2\n                  )\n                : _vm._e(),\n              _vm.data.type == \"cascader\"\n                ? _c(\"el-form-item\", { attrs: { label: \"远端数据\" } }, [\n                    _c(\n                      \"div\",\n                      [\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: { size: \"mini\" },\n                            model: {\n                              value: _vm.data.options.remoteFunc,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"remoteFunc\", $$v)\n                              },\n                              expression: \"data.options.remoteFunc\"\n                            }\n                          },\n                          [\n                            _c(\"template\", { slot: \"prepend\" }, [\n                              _vm._v(\"远端方法\")\n                            ])\n                          ],\n                          2\n                        ),\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: { size: \"mini\" },\n                            model: {\n                              value: _vm.data.options.props.value,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options.props, \"value\", $$v)\n                              },\n                              expression: \"data.options.props.value\"\n                            }\n                          },\n                          [_c(\"template\", { slot: \"prepend\" }, [_vm._v(\"值\")])],\n                          2\n                        ),\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: { size: \"mini\" },\n                            model: {\n                              value: _vm.data.options.props.label,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options.props, \"label\", $$v)\n                              },\n                              expression: \"data.options.props.label\"\n                            }\n                          },\n                          [\n                            _c(\"template\", { slot: \"prepend\" }, [\n                              _vm._v(\"标签\")\n                            ])\n                          ],\n                          2\n                        ),\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: { size: \"mini\" },\n                            model: {\n                              value: _vm.data.options.props.children,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.data.options.props,\n                                  \"children\",\n                                  $$v\n                                )\n                              },\n                              expression: \"data.options.props.children\"\n                            }\n                          },\n                          [\n                            _c(\"template\", { slot: \"prepend\" }, [\n                              _vm._v(\"子选项\")\n                            ])\n                          ],\n                          2\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                : _vm._e(),\n              Object.keys(_vm.data.options).indexOf(\"defaultValue\") >= 0 &&\n              (_vm.data.type == \"textarea\" ||\n                _vm.data.type == \"input\" ||\n                _vm.data.type == \"rate\" ||\n                _vm.data.type == \"color\" ||\n                _vm.data.type == \"switch\")\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"默认值\" } },\n                    [\n                      _vm.data.type == \"textarea\"\n                        ? _c(\"el-input\", {\n                            attrs: { type: \"textarea\", rows: 5 },\n                            model: {\n                              value: _vm.data.options.defaultValue,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"defaultValue\", $$v)\n                              },\n                              expression: \"data.options.defaultValue\"\n                            }\n                          })\n                        : _vm._e(),\n                      _vm.data.type == \"input\"\n                        ? _c(\"el-input\", {\n                            model: {\n                              value: _vm.data.options.defaultValue,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"defaultValue\", $$v)\n                              },\n                              expression: \"data.options.defaultValue\"\n                            }\n                          })\n                        : _vm._e(),\n                      _vm.data.type == \"rate\"\n                        ? _c(\"el-rate\", {\n                            staticStyle: {\n                              display: \"inline-block\",\n                              \"vertical-align\": \"middle\"\n                            },\n                            attrs: {\n                              max: _vm.data.options.max,\n                              \"allow-half\": _vm.data.options.allowHalf\n                            },\n                            model: {\n                              value: _vm.data.options.defaultValue,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"defaultValue\", $$v)\n                              },\n                              expression: \"data.options.defaultValue\"\n                            }\n                          })\n                        : _vm._e(),\n                      _vm.data.type == \"rate\"\n                        ? _c(\n                            \"el-button\",\n                            {\n                              staticStyle: {\n                                display: \"inline-block\",\n                                \"vertical-align\": \"middle\",\n                                \"margin-left\": \"10px\"\n                              },\n                              attrs: { type: \"text\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.data.options.defaultValue = 0\n                                }\n                              }\n                            },\n                            [_vm._v(\"清空\")]\n                          )\n                        : _vm._e(),\n                      _vm.data.type == \"color\"\n                        ? _c(\"el-color-picker\", {\n                            attrs: { \"show-alpha\": _vm.data.options.showAlpha },\n                            model: {\n                              value: _vm.data.options.defaultValue,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"defaultValue\", $$v)\n                              },\n                              expression: \"data.options.defaultValue\"\n                            }\n                          })\n                        : _vm._e(),\n                      _vm.data.type == \"switch\"\n                        ? _c(\"el-switch\", {\n                            model: {\n                              value: _vm.data.options.defaultValue,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"defaultValue\", $$v)\n                              },\n                              expression: \"data.options.defaultValue\"\n                            }\n                          })\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.data.type == \"time\" || _vm.data.type == \"date\"\n                ? [\n                    _vm.data.type == \"date\"\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"显示类型\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                model: {\n                                  value: _vm.data.options.type,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"type\", $$v)\n                                  },\n                                  expression: \"data.options.type\"\n                                }\n                              },\n                              [\n                                _c(\"el-option\", { attrs: { value: \"year\" } }),\n                                _c(\"el-option\", { attrs: { value: \"month\" } }),\n                                _c(\"el-option\", { attrs: { value: \"date\" } }),\n                                _c(\"el-option\", { attrs: { value: \"dates\" } }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"datetime\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"datetimerange\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"daterange\" }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm.data.type == \"time\"\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"是否为范围选择\" } },\n                          [\n                            _c(\"el-switch\", {\n                              model: {\n                                value: _vm.data.options.isRange,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.data.options, \"isRange\", $$v)\n                                },\n                                expression: \"data.options.isRange\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm.data.type == \"date\"\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"是否获取时间戳\" } },\n                          [\n                            _c(\"el-switch\", {\n                              model: {\n                                value: _vm.data.options.timestamp,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.data.options, \"timestamp\", $$v)\n                                },\n                                expression: \"data.options.timestamp\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    (!_vm.data.options.isRange && _vm.data.type == \"time\") ||\n                    (_vm.data.type != \"time\" &&\n                      _vm.data.options.type != \"datetimerange\" &&\n                      _vm.data.options.type != \"daterange\")\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"占位内容\" } },\n                          [\n                            _c(\"el-input\", {\n                              model: {\n                                value: _vm.data.options.placeholder,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.data.options, \"placeholder\", $$v)\n                                },\n                                expression: \"data.options.placeholder\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm.data.options.isRange ||\n                    _vm.data.options.type == \"datetimerange\" ||\n                    _vm.data.options.type == \"daterange\"\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"开始时间占位内容\" } },\n                          [\n                            _c(\"el-input\", {\n                              model: {\n                                value: _vm.data.options.startPlaceholder,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.data.options,\n                                    \"startPlaceholder\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"data.options.startPlaceholder\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm.data.options.isRange ||\n                    _vm.data.options.type == \"datetimerange\" ||\n                    _vm.data.options.type == \"daterange\"\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"结束时间占位内容\" } },\n                          [\n                            _c(\"el-input\", {\n                              model: {\n                                value: _vm.data.options.endPlaceholder,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.data.options,\n                                    \"endPlaceholder\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"data.options.endPlaceholder\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"格式\" } },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: _vm.data.options.format,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data.options, \"format\", $$v)\n                            },\n                            expression: \"data.options.format\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm.data.type == \"time\" &&\n                    Object.keys(_vm.data.options).indexOf(\"isRange\") >= 0\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"默认值\" } },\n                          [\n                            !_vm.data.options.isRange\n                              ? _c(\"el-time-picker\", {\n                                  key: \"1\",\n                                  staticStyle: { width: \"100%\" },\n                                  attrs: {\n                                    arrowControl: _vm.data.options.arrowControl,\n                                    \"value-format\": _vm.data.options.format\n                                  },\n                                  model: {\n                                    value: _vm.data.options.defaultValue,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.data.options,\n                                        \"defaultValue\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"data.options.defaultValue\"\n                                  }\n                                })\n                              : _vm._e(),\n                            _vm.data.options.isRange\n                              ? _c(\"el-time-picker\", {\n                                  key: \"2\",\n                                  staticStyle: { width: \"100%\" },\n                                  attrs: {\n                                    \"is-range\": \"\",\n                                    arrowControl: _vm.data.options.arrowControl,\n                                    \"value-format\": _vm.data.options.format\n                                  },\n                                  model: {\n                                    value: _vm.data.options.defaultValue,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.data.options,\n                                        \"defaultValue\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"data.options.defaultValue\"\n                                  }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      : _vm._e()\n                  ]\n                : _vm._e(),\n              _vm.data.type == \"imgupload\"\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"最大上传数\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { type: \"number\" },\n                          model: {\n                            value: _vm.data.options.length,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data.options, \"length\", _vm._n($$v))\n                            },\n                            expression: \"data.options.length\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"使用七牛上传\" } },\n                      [\n                        _c(\"el-switch\", {\n                          model: {\n                            value: _vm.data.options.isQiniu,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data.options, \"isQiniu\", $$v)\n                            },\n                            expression: \"data.options.isQiniu\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm.data.options.isQiniu\n                      ? [\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"Domain\", required: true } },\n                            [\n                              _c(\"el-input\", {\n                                model: {\n                                  value: _vm.data.options.domain,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"domain\", $$v)\n                                  },\n                                  expression: \"data.options.domain\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                label: \"获取七牛Token方法\",\n                                required: true\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                model: {\n                                  value: _vm.data.options.tokenFunc,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"tokenFunc\", $$v)\n                                  },\n                                  expression: \"data.options.tokenFunc\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ]\n                      : [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: { label: \"图片上传地址\", required: true }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                model: {\n                                  value: _vm.data.options.action,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"action\", $$v)\n                                  },\n                                  expression: \"data.options.action\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ]\n                  ]\n                : _vm._e(),\n              _vm.data.type == \"blank\"\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"绑定数据类型\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            model: {\n                              value: _vm.data.options.defaultType,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"defaultType\", $$v)\n                              },\n                              expression: \"data.options.defaultType\"\n                            }\n                          },\n                          [\n                            _c(\"el-option\", {\n                              attrs: { value: \"String\", label: \"字符\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { value: \"Object\", label: \"对象\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { value: \"Array\", label: \"数组\" }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                : _vm._e(),\n              _vm.data.type == \"grid\"\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"栅格间隔\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { type: \"number\" },\n                          model: {\n                            value: _vm.data.options.gutter,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data.options, \"gutter\", _vm._n($$v))\n                            },\n                            expression: \"data.options.gutter\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"列配置项\" } },\n                      [\n                        _c(\n                          \"draggable\",\n                          _vm._b(\n                            {\n                              attrs: {\n                                tag: \"ul\",\n                                list: _vm.data.columns,\n                                handle: \".drag-item\"\n                              }\n                            },\n                            \"draggable\",\n                            {\n                              group: { name: \"options\" },\n                              ghostClass: \"ghost\",\n                              handle: \".drag-item\"\n                            },\n                            false\n                          ),\n                          _vm._l(_vm.data.columns, function(item, index) {\n                            return _c(\n                              \"li\",\n                              { key: index },\n                              [\n                                _c(\n                                  \"i\",\n                                  {\n                                    staticClass: \"drag-item\",\n                                    staticStyle: {\n                                      \"font-size\": \"16px\",\n                                      margin: \"0 5px\",\n                                      cursor: \"move\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"i\", {\n                                      staticClass: \"iconfont icon-icon_bars\"\n                                    })\n                                  ]\n                                ),\n                                _c(\"el-input\", {\n                                  staticStyle: { width: \"100px\" },\n                                  attrs: {\n                                    placeholder: \"栅格值\",\n                                    size: \"mini\",\n                                    type: \"number\"\n                                  },\n                                  model: {\n                                    value: item.span,\n                                    callback: function($$v) {\n                                      _vm.$set(item, \"span\", _vm._n($$v))\n                                    },\n                                    expression: \"item.span\"\n                                  }\n                                }),\n                                _c(\"el-button\", {\n                                  staticStyle: {\n                                    padding: \"4px\",\n                                    \"margin-left\": \"5px\"\n                                  },\n                                  attrs: {\n                                    circle: \"\",\n                                    plain: \"\",\n                                    type: \"danger\",\n                                    size: \"mini\",\n                                    icon: \"el-icon-minus\"\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleOptionsRemove(index)\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          }),\n                          0\n                        ),\n                        _c(\n                          \"div\",\n                          { staticStyle: { \"margin-left\": \"22px\" } },\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"text\" },\n                                on: { click: _vm.handleAddColumn }\n                              },\n                              [_vm._v(\"添加列\")]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"水平排列方式\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            model: {\n                              value: _vm.data.options.justify,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"justify\", $$v)\n                              },\n                              expression: \"data.options.justify\"\n                            }\n                          },\n                          [\n                            _c(\"el-option\", {\n                              attrs: { value: \"start\", label: \"左对齐\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { value: \"end\", label: \"右对齐\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { value: \"center\", label: \"居中\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: {\n                                value: \"space-around\",\n                                label: \"两侧间隔相等\"\n                              }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: {\n                                value: \"space-between\",\n                                label: \"两端对齐\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"垂直排列方式\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            model: {\n                              value: _vm.data.options.align,\n                              callback: function($$v) {\n                                _vm.$set(_vm.data.options, \"align\", $$v)\n                              },\n                              expression: \"data.options.align\"\n                            }\n                          },\n                          [\n                            _c(\"el-option\", {\n                              attrs: { value: \"top\", label: \"顶部对齐\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { value: \"middle\", label: \"居中\" }\n                            }),\n                            _c(\"el-option\", {\n                              attrs: { value: \"bottom\", label: \"底部对齐\" }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                : _vm._e(),\n              _vm.data.type != \"grid\"\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"数据绑定Key\" } },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: _vm.data.model,\n                            callback: function($$v) {\n                              _vm.$set(_vm.data, \"model\", $$v)\n                            },\n                            expression: \"data.model\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"操作属性\" } },\n                      [\n                        Object.keys(_vm.data.options).indexOf(\"readonly\") >= 0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.readonly,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"readonly\", $$v)\n                                  },\n                                  expression: \"data.options.readonly\"\n                                }\n                              },\n                              [_vm._v(\"完全只读\")]\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"disabled\") >= 0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.disabled,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"disabled\", $$v)\n                                  },\n                                  expression: \"data.options.disabled\"\n                                }\n                              },\n                              [_vm._v(\"禁用\\t\")]\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"editable\") >= 0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.editable,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"editable\", $$v)\n                                  },\n                                  expression: \"data.options.editable\"\n                                }\n                              },\n                              [_vm._v(\"文本框可输入\")]\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"clearable\") >= 0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.clearable,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"clearable\", $$v)\n                                  },\n                                  expression: \"data.options.clearable\"\n                                }\n                              },\n                              [_vm._v(\"显示清除按钮\")]\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"arrowControl\") >=\n                        0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.arrowControl,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.data.options,\n                                      \"arrowControl\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"data.options.arrowControl\"\n                                }\n                              },\n                              [_vm._v(\"使用箭头进行时间选择\")]\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"isDelete\") >= 0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.isDelete,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"isDelete\", $$v)\n                                  },\n                                  expression: \"data.options.isDelete\"\n                                }\n                              },\n                              [_vm._v(\"删除\")]\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"isEdit\") >= 0\n                          ? _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.isEdit,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"isEdit\", $$v)\n                                  },\n                                  expression: \"data.options.isEdit\"\n                                }\n                              },\n                              [_vm._v(\"编辑\")]\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"校验\" } },\n                      [\n                        _c(\n                          \"div\",\n                          [\n                            _c(\n                              \"el-checkbox\",\n                              {\n                                model: {\n                                  value: _vm.data.options.required,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"required\", $$v)\n                                  },\n                                  expression: \"data.options.required\"\n                                }\n                              },\n                              [_vm._v(\"必填\")]\n                            )\n                          ],\n                          1\n                        ),\n                        Object.keys(_vm.data.options).indexOf(\"dataType\") >= 0\n                          ? _c(\n                              \"el-select\",\n                              {\n                                attrs: { size: \"mini\" },\n                                model: {\n                                  value: _vm.data.options.dataType,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data.options, \"dataType\", $$v)\n                                  },\n                                  expression: \"data.options.dataType\"\n                                }\n                              },\n                              [\n                                _c(\"el-option\", {\n                                  attrs: { value: \"string\", label: \"字符串\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"number\", label: \"数字\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"boolean\", label: \"布尔值\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"integer\", label: \"整数\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"float\", label: \"浮点数\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"url\", label: \"URL地址\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"email\", label: \"邮箱地址\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: { value: \"hex\", label: \"十六进制\" }\n                                })\n                              ],\n                              1\n                            )\n                          : _vm._e(),\n                        Object.keys(_vm.data.options).indexOf(\"pattern\") >= 0\n                          ? _c(\n                              \"div\",\n                              [\n                                _c(\"el-input\", {\n                                  staticStyle: { width: \"240px\" },\n                                  attrs: {\n                                    size: \"mini\",\n                                    placeholder: \"填写正则表达式\"\n                                  },\n                                  model: {\n                                    value: _vm.data.options.pattern,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.data.options, \"pattern\", $$v)\n                                    },\n                                    expression: \"data.options.pattern\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}